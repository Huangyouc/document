如果 adb操作提示 Operation not permitted

请先 adb root && adb remount，然后再操作

exit 退出当前 adb操作

杀掉这个应用，清掉数据：
adb shell pm clear com.mega.settings


本机刷的e0y，Redwood新增信号后，需要把新增的代码导入到机器里，由王锐 给  android.hardware.automotive.vehicle@2.0-mega-service  和 RedwoodCarService.apk 两个文件：
然后进行导入：
youchanghuang@ych-HP-ProBook:~/下载$ adb root 
adbd is already running as root
youchanghuang@ych-HP-ProBook:~/下载$ adb remount
remount succeeded
youchanghuang@ych-HP-ProBook:~/下载$ adb shell
redwood:/ # cd vendor/bin/hw                                                   
hw/      hwclock
redwood:/ # cd vendor/bin/hw                                                   
redwood:/vendor/bin/hw # ls -l | grep auto
-rwxr-xr-x 1 root      shell       60456 2022-12-27 07:37 android.hardware.automotive.audiocontrol@2.0-service
-rwxr-xr-x 1 root      shell     2312016 2022-12-27 07:38 android.hardware.automotive.vehicle@2.0-mega-service
-rwxr-xr-x 1 root      shell      339488 2022-12-27 07:37 android.hardware.automotive.vehicle@2.0-service
-rwxr-xr-x 1 root      shell       43528 2022-12-27 07:38 vendor.qti.automotive.qcarcam@1.0-service
redwood:/vendor/bin/hw # exit                                                                                                                                   
youchanghuang@ych-HP-ProBook:~/下载$ adb push '/home/youchanghuang/下载/android.hardware.automotive.vehicle@2.0-mega-service' /vendor/bin/hw
/home/youchanghuang/下载/android.hardware.automotive.vehicle@2.0-mega-service: 1 file pushed. 31.1 MB/s (2344008 bytes in 0.072s)
youchanghuang@ych-HP-ProBook:~/下载$ adb shell
redwood:/ # sync
redwood:/ # sync
redwood:/ # exit'
> ^C
130|redwood:/ # exit
youchanghuang@ych-HP-ProBook:~/下载$ adb sehll
adb: usage: unknown command sehll
youchanghuang@ych-HP-ProBook:~/下载$ adb shell
redwood:/ # cd syste
system/      system_ext/
redwood:/ # cd system/pr                                                                                                                                        
priv-app/  product/
redwood:/ # cd system/priv-app/RedwoodCarService/                                                                                                               
redwood:/system/priv-app/RedwoodCarService # ls
RedwoodCarService.apk
redwood:/system/priv-app/RedwoodCarService # exit
youchanghuang@ych-HP-ProBook:~/下载$ adb push RedwoodCarService.apk system/priv-app/RedwoodCarService
RedwoodCarService.apk: 1 file pushed. 28.2 MB/s (1299129 bytes in 0.044s)
youchanghuang@ych-HP-ProBook:~/下载$ sync
youchanghuang@ych-HP-ProBook:~/下载$ adb shell
redwood:/ # sync
redwood:/ # cd syste                                                                                                                                            
system/      system_ext/
redwood:/ # cd system/pr                                                                                                                                        
priv-app/  product/
redwood:/ # cd system/priv-app/RedwoodCarService/                                                                                                               
redwood:/system/priv-app/RedwoodCarService # ls -l        
total 1272
-rw-r--r-- 1 root root 1299129 2022-12-29 15:35 RedwoodCarService.apk
redwood:/system/priv-app/RedwoodCarService # sync
redwood:/system/priv-app/RedwoodCarService # youchanghuang@ych-HP-ProBook:~/下载$ 



apt基本命令：
安装软件： sudo apt install [software] ；
卸载软件： sudo apt remove [software] ；
更新可用软件包： sudo apt update ；
更新已安装软件包： sudo apt upgrade 。



电脑上如何模拟信号发送进行调试：
使用最新的 CherySomeIP，将板子刷成相应的SOC，准备好 以太网转接盒，
根据read_me 和 多IP设定.docx文档 来配置，第一次要 sudo apt install vlan  
不会的地方请教他人，比如 胡保军，王锐
sudo bash vlan_chery.sh
最后在 someip_case目录下，执行  python3 display_gui.py  即可启动工具。


ota升级包放在 com.mega.update，插上后自动拷贝升级

adb remount

意义：remount /system/, /etc/等路径的读写权限，使当前用户有权限读写设备中/system/, /etc/等路径下的文件。使用先必须先用adb root命令。

常见问题： remount失败。

解决方案： 如果adb remount 命令提示remount失败，则可以先运行adb disable-verity命令，然后重启设备，最后再使用root和remount命令。

adb disable-verity
adb reboot
adb root
adb remount




git reset --soft HEAD^


当本地提交和远端提交出现冲突的时候：（这只是一种思路）
将本地重置到远端上一个提交：
git reset HEAD~1
git status
git pull
git reset --hard HEAD~2
git pull
git stash pop
git status
然后看看是否需要重新提交



使用QFIL刷SOC
拿到串口线，按住短接口进行上电，
SelectPort 9008 
Load Content 到选中的soc的根目录，选中 qfi_bin/Content文件
Select Programmer  选中下载的qfi_bin/boot_8155/boot_images/QcomPkg/SDMPkg/855/Bin/AU/RELEASE/prog_firehose_ddr.elf

最后：Download Content



CarSetting 本地模拟发送信号：
电脑连上板子后，
adb shell
telnet cdc-qnx
root

然后：
on -T msg_center_t -u msg_center msg_center_test -t DrivingInfo/DrivingModeOut '{"extension":null,"relative":false,"time":0,"type":4194304,"unit":"","valid":true,"value":0}' 
send data success: {"extension":null,"relative":false,"time":0,"type":4194304,"unit":"","valid":true,"value":0}

其中 DrivingInfo/DrivingModeOut  是信号，'{"extension":null,"relative":false,"time":0,"type":4194304,"unit":"","valid":true,"value":0}' 是值

ui触发按钮，检查qnx是否收到信号：
on -T ic_apps_t -u ic_apps /usr/bin/mega_ipc_sub -t "AC/Status/Front/Set"
on -T ic_apps_t -u ic_apps /usr/bin/mega_ipc_sub -t "DrivingInfo/CarMode/Set"

空调模拟发送信号：
adb shell  msg_center_test -t Sensor/OutsideAirQuality  '{"value":10.5}'
其中 Sensor/OutsideAirQuality 是信号，'{"value":10.5}' 是值。


接受信息：
msg_center_test -r Sensor/OutsideAirQuality


qnx 服务进程过滤：
ps -ef | grep ais_vision_server


截屏 当前 板子：
adb shell screencap -p /sdcard/1.png && adb pull /sdcard/1.png
截屏android投到仪表的屏幕：
adb shell screencap -d 2 -p > sdcard/screen_2.png  && adb pull /sdcard/1.png

能将当前板子的ui截屏放到当前电脑目录

录屏：
scrcpy -r test.mp4


wireshark使用：
sudo wireshark 启动
上面过滤器输入someip.serviceid ==0xa923
可以过滤出来相关服务。

过滤服务id的条件:
someipsd.entry.serviceid==0xa701
过滤出来后，即有Offer，又有Subscribe 和 SubscribeAck，这是一个完整的牵手过程，说明这个服务正常的。





运行git remote列出现有的远程，并查看其名称和URL：

 git remote -v

输出如下所示内容：

originhttps://github.com/user/repo_name.git (fetch)

originhttps://github.com/user/repo_name.git (push)

使用git remote set-url命令，后跟远程名称和远程URL：

 git remote set-url

远程URL可以以HTTPS或SSH开头，具体取决于你使用的协议，如果未指定协议，则默认为SSH，该URL可以在Git托管服务的存储库页面上找到。

例如，要将origin的URL更改为git@gitserver.com:user/repo_name.git，你可以输入：

$ git remote set-url origin git@gitserver.com:user/repo_name.git



adb shell
logcat | grep TMS_ 可以过滤输入信号
TMS_是输入信号的前缀
既可以过滤输入，也可以过滤输出
logcat | grep TMS_Mode_Front
logcat | grep eHMI_BlowFace



reset到远程最新的提交：
git reset --hard mega/release/glacier_hqx.1.2.1_20221021


处于编辑器里，如果不想编辑任何东西，可以 :quit!  退出
gerrit上cp冲突的情况下，可以 down patch，然后复制 cp命令行，工程切换到这个分支，执行命令行，
这个时候一定要先运行项目，看看哪些地方冲突
然后本地解决冲突，然后 git add .   git commit --amend 
然后 git push mega HEAD:refs/for/release/glacier_hqx.1.2.1_20221021
推送到对应分支，然后gerrit上加对应的review的人。

ubutun安装vim：
sudo apt-get install vim

git修改文本编辑器为vim
git config --global core.editor "vim"





实车上抓SOMEIP日志
adb root 
adb remount
adb  shell
cd data/
mkdir debug
cd debug
tcpdump -i eth0.62 -w  xxxx.pcap     (xxxx是文件的名字最好命名为车号加日期，如PT105_1223.pcap)

操作UI，操作完之后，CTRL+C 结束监听信号。
退出adb shell
adb pull /data/debug/xxxx.pcap 

全量报文：
adb shell
telnet cdc-qnx
root
cd ota/android

tcpdump -vv -w all.pcap
抓完后按ctl+C停止抓报文，再通过adb取下来报文

adb pull /ota/qnx.pcap



E0X如何在 as的日志里过滤出输入信号：
RedwoodSomeIpProperty
并使用 No Filters


E0X OTA升级包 更新方式：
下载最新的 e0y或者e03的soc的ota包，放在U盘里，u盘插在蓝色的usb中，然后中控选中 升级测试工具 ，会有弹框，选中右下角的DMC，然后选中U盘，
然后选中对应的升级包，拷贝，等进度条跑完，点击确定，可以拔出u盘，后面自动升级。


adb reboot 重启android

查看soc版本号：（可能会改变）
adb shell
telnet cdc-qnx
root
cat /etc/version
输出如下：
VERSION=1.130.144.32812-20230207044856
DEVICE=redwood
VARIANT=userdebug
BRANCH=release_redwood_hqx.1.2.1_20230103
OEM_VERSION=00.01.02.52

怎么抓仪表的日志：
adb  root
adb pull qlog .（不确定最后这个 . 是否必须，不加. 也能导出）
抓仪表日志，应该还有其他的方式，比如：（本人没试过）
adb shell
telnet cdc-qnx
root
tcpdump -i vlan62 -w xxx.pacp
cp xxx.pacp /ota/android
exit 
exit
adb pull /ota/xxx.pcap



adb pull log 拉的是安卓的log

adb 进cdc-qnx之后，执行reset能重启安卓和qnx



读取配置字：
adb shell getprop

adb shell getprop | grep PM25_MONITOR
如果输出是1，就表示支持 pm2.5传感器。


如果wireshark过滤不出来信息，找陈伟帮忙，应该要有件 decode as配置一些信息


adb安装apk：
准备engineeringmode.apk，
adb install engineeringmode.apk(这里直接把apk拖到命令行)
启动apk：
adb shell am start com.mega.engineeringmode/.MainActivity

ota升级的时候，如果进度条很慢，可能是内存被占用，
adb shell
telnet cdc-qnx
root
slay ic_service
多执行几次 slay ic_service，直到提示  slay: Unable to find process 'ic_service' 表示杀死了这个进程。
这样升级会快点。

dumpsys car_service get-power-state
ON(1)代表正常,屏幕应该亮起

如果是 STAND_BY(6)，表示线子没接好，或者软件有问题，屏幕亮不起来。


wireshark 信息过滤：
someipsd.entry.serviceid==0xA920
可以过滤出 offer  subscribe  subscribleAck
过滤出具体的服务并且能看到发出去的值
ip.addr == 192.168.62.31 && someip.serviceid==0xA920&&someip.payload==01

wireshark no time source destination 这一行的，右键选中pref，可以+一个payload，属性就写someip.payload

使用 someipsd.entry.serviceid==0xA966过滤，如果出来的结果只有offer，没有subscribe的话，说明我们发出去，对方没有订阅，是对方的问题
如果对方没有订阅，使用someip.serviceid==0xA966过滤的结果是空白的。
如果对方订阅了，使用someip.serviceid==0xA966过滤的结果 会有payload的值，paylaod就是我们代码发出去的值。

someipsd.entry.serviceid ==0xa923  someipsd.entry 是用来查看 someip的握手过程
点击offer这一行，查看 SOME/IP Service Discovery Protocol ，展开Entries Array ,会有很多Offer Service,找到我们想要的Service ID，比如 0xa923,展开以后，有个Index,看看是多少行；然后在Options Array 里找到对应的行数，就能看到我们发的是TCP还是UDP

点击Subscribe，相同方式可以看到 对方给我们回的是UDP还是TCp。



adb shell
telnet cdc-qnx
root
logcat -w|grep "M short to ground detected!"

查看麦克风是否通了
如果显示 1 2 3 4，就表示 1 2 3 4 都没通

麦克风接法：A5接负极，A6接正极。

启动录音工具：
adb shell am start -n com.mega.audiotesttools/.MainActivity


查看电源模式：on表示中控ui界面可以触摸
adb shell dumpsys car_service get-power-state


adb root
adb shell
netstat -anp | grep someipd
显示 0.0.0.0:* 的表示someip没连上
显示 192.168.62.3:30501这种形式的，表示连上了。



T1E实车抓日志：
u盘根目录，新建 log.mega.co 文件夹，u盘里不要有升级包之类的东西。
u盘插到车上usb接口，当前软件要处于usb模式。

T1E切换usb模式和adb模式：
本地设置 ，系统tab的右下角，多次点击，弹出工程模式，可以进行adb和usb切换

切换到adb模式下，怎么抓日志？

USER版本开root的方法：
1.telnet cdc-qnx
root
root@mega#cdc!
2.touch persist/enable_dbg
3.reset
关闭android root权限步骤
1.telnet cdc-qnx（输root +密码@mega#cdc!)
2.rm persist/enable_dbg
3.reset
大家记得打开了不用的话要关掉，尤其是在客户现场使用尤其注意


遇到：telnet: connect: Message too long
输入：setenforce 0   就行


1、不接以太网盒子，不会触发心跳重启检测；
2、接了以太网盒子，必须按照以太网物理层配置一个vcc的配置，步骤如下：
sudo ip link set dev 网卡 down
sudo ip link set dev 网卡 address 02:51:52:00:00:07
sudo ip link set dev 网卡 up
sudo ip link add link 网卡 name enx.62 type vlan id 62
sudo ifconfig enx.62 192.168.62.7/24 broadcast 192.168.62.255 up
3、·在qnx禁用vcc检测
touch /persist/disable_vcc
以上三种方式都可以解决这个问题


用这个方式可以通过ADB将log取出去：
拉取到自己电脑指定目录：
adb pull /log '/home/youchanghuang/下载/test/0223/123' 

拉取到自己电脑命令行当前目录：
adb pull /log 



切换到目标目录，过滤这个目录下的日志
zgrep "value: 1" *//过滤出所有 包含value: 1 的语句（有空格的情况下，需要用 ""）
或者：
zgrep EHMI_ACADJUST_NOTIFY_AC_REQUEST  *


过滤出指定包名的进程：
adb shell ps | grep com.mega
杀掉指定进程：
adb shell kill 2499

查看第一个屏幕：
scrcpy --display 0
查看第二个屏幕
scrcpy --display 1
查看第三个屏幕
scrcpy --display 2

scrcpy默认打开第一个屏幕


logcat -b
日志等级：（一定要了解这些日志等级的含义）
main system radio events crash default all
system： 系统层面发出来的日志
events：activity切换的日志

日志里有
switch to system 
switch to events
等关键字

日志里搜索Booting linux，这是第一次开机触发；

开发阶段可以多打印日志，这样上线后可以方便拿日志。



adb shell getevent

输出类似下面这种日志：
add device 1: /dev/input/event2
  name:     "QVM virtio-input (keyboard)"
add device 2: /dev/input/event1
  name:     "QVM virtio-input (touchscreen)"
add device 3: /dev/input/event0

然后点击屏幕，日志输出：
/dev/input/event1: 0001 014a 00000001
/dev/input/event1: 0003 0039 00000000
/dev/input/event1: 0003 0035 0000047e
/dev/input/event1: 0003 0036 000004e5
/dev/input/event1: 0000 0000 00000000
/dev/input/event1: 0003 0039 ffffffff
/dev/input/event1: 0001 014a 00000000
/dev/input/event1: 0000 0000 00000000
/dev/input/event1: 0001 014a 00000001
/dev/input/event1: 0003 0039 00000000
/dev/input/event1: 0003 0035 0000049a
/dev/input/event1: 0003 0036 00000503
/dev/input/event1: 0000 0000 00000000
/dev/input/event1: 0003 0039 ffffffff
/dev/input/event1: 0001 014a 00000000
如果点击屏幕，没有这种日志输出，就是屏幕的问题，给高兵；有输出，但是屏幕依然没反应，需要根据日志分析。


git push mega HEAD:refs/for/master
报错：
fatal: Service not enabled
fatal: 远程错误：Service not enabled
解决步骤：
git remote -v
mega	ssh://youchang.huang@git-slave-wh.i-tetris.com:29418/apps/gladius/android/chery/e0x/modules (fetch)
mega	ssh://youchang.huang@git-slave-wh.i-tetris.com:29418/apps/gladius/android/chery/e0x/modules (push)

然后改成北京的地址：
git remote set-url mega ssh://youchang.huang@git.i-tetris.com:29418/apps/gladius/android/chery/e0x/modules

注意：有的时候 是origin，需要 把mega改成origin



gerrit上搜索之前的提交：
owner:self branch:master

实体屏幕接线后显示但是无法点击：
adb shell dumpsys car_service get-power-state
如果提示 stand_by 就是表示 B34 和b35引脚接的有问题；
如果是on，屏幕还是不行的话，需要找高兵看下。


DMS指的是驾驶员的舱内视觉检测，OMS是指乘客的舱内视觉检测

打开ssh的配置，可以配置北京和武汉的地址：
vi ～/.ssh/config

当前提交在gerrit上编译失败但不是自己代码的问题，是jenkis环境问题，需要重新编译的，在gerrit最下面，点击jenkis的链接，进去有trigger，就是重新编译。


切换到项目根目录
repo forall -c 

已提交但是未合入的代码，可以通过这个回退多个提交。
git rebase -i HEAD~4


当一个分支A需要 把另一个分支B最近几次提交cp过来的时候，
先确保两个分支都是干净的
git pull --rebase
git checkout B 
git log --oneline -20
8373f3a (HEAD -> master, mega/master, m/master) 二三排模式按键
fee2e1e 信号调整
d5b53f8 空调出风口
e625124 空调吹风和加热
6b0a3a9 智能模式
3ba8a61 二排三排功能
5f5ed6a (mega/mfg/samoa_hqx.1.2.1_20230306) 新增信号,ui调整
f7462b3 删除讯飞语音依赖
7023300 香氛功能
2b97807 后除霜按钮功能
e0af79a 座椅功能代码类型转换异常修复
cdcba86 前后排座椅按摩
0fb7628 (mega/sop/glacier_hqx.1.2.1_20230223, mega/feature/glacier_hqx.1.2.1_20230227, mega/demo/redwood_hqx.1.2.1_20230223, mega/demo/glacier_hqx.1.2.1_20230227, mega/demo/glacier_hqx.1.2.1_20230223) 后排屏座椅位置调节
ff7c36f (mega/release/zion_hqx.1.2.1_20230220, mega/release/glacier_hqx.1.2.1_20230218, mega/dev_hqx.1.2.1) 修复风量按钮滑动不灵
敏
ad634d4 上下左右调节关联吹风模式
f491abd ui按键状态调整
9865fcb 修复bug
7e21294 除霜按钮状态
69e78e3 空调风量滑动偶发断触摸问题
f5ad633 空调风量等按键触发空调开机


然后：git checkout A
git cherry-pick 8373f3a...f7462b3
8373f3a分别是B最后一次提交，8373f3a...7023300就是B比A多的那几次提交

然后 git status 检查一下本地可以保留，正常情况下，这时候已经提交上去了，然后执行：
git push mega HEAD:refs/for/A
然后在geerit上添加review



remote couldn’t create file: Read-only file system
adb-root
adb disable-verity
adb reboot
adb root
adb remount


命令行抓取日志：
adb shell
logcat | grep Runtime



在特定目录下，C*表示文件名是C开头的文件，都会被推入这个目录/data/user_de/0/com.mega.cert/cache/
adb push C* /data/user_de/0/com.mega.cert/cache/


删除目录后
rm -rf log
在操作界面，此时log不会生成文件夹，需要adb reboot后再重新操作ui再抓日志


卸载apk：
1、直接执行卸载
1）查看包名：

adb shell pm list packages

2）指定包名卸载：

adb uninstall {包名}

2、获取root权限卸载
方法1一般可能无法卸载，这时就需要获取root权限，删除指定文件下的apk。

1）通过包名获取apk路径（包名地址）：

adb shell pm path {包名}

2）root权限：

adb root

3）读写权限

adb remount

4）删除apk：

adb shell rm {包名地址}

5）重启root：

adb reboot

3、shell卸载
如果2方法还是无法卸载，就只能进入apk目录下进行删除了。

1）获取root权限：

执行2中（2）（3）方法

2）进入shell：

adb shell

3）查看包名：

pm list package

4）获取路径：

pm path {包名}

5）进入apk所在目录

cd /system/app/***

6）彻底删除apk：

rm -rf xxx.apk

7）重启：

reboot

apk重签名：
jarsigner -verbose -keystore XXXXX.keystore -signedjar notepad_signed.apk notepad.apk XXXX.keystore
说明：
1)jarsigner是工具名称，-verbose表示将签名过程中的详细信息打印出来；
2)-keystore XXXXX.keystore 表示签名所使用的数字证书所在位置，没有写路径，表示文件在当前目录；
3)-signedjar notepad_signed.apk notepad.apk 表示给notepad.apk文件签名，签名后的文件名称为notepad_signed.apk；
4)最后面的XXXX.keystore 表示证书的别名，对应于生成数字证书时-alias参数后面的名称

使用jarsigner对APK重签名，提示：jarsigner: 无法对 jar 进行签名: java.util.zip.ZipException: invalid entry compressed size (expected 41278 but got 42575
bytes) bytes)
最后解决办法是：把要重签名的apk后缀改成zip，打开后删除里面的META-INF目录，然后重新改成apk后缀


网易云音乐的apk，我先把apk push 到vendor/app目录下，重启后，点击这个app会崩溃；但是我直接用 adb install apk 启动这个apk就不会崩溃
解决办法：
按照正常的集成apk的方式，集成到系统中，android.mk和device.mk都配置好，重启个版本，验证ok。


公司的自己的网盘地址：
https://mega-disk.megatronix.com/apps/files/?dir=/&fileid=480225  域账号

信号表里的颜色标注：
需要处理的信号统一修改成黄色；
王锐把黄色的信号加入到Carservice以后，会改成绿色；
上层应用开发调用信号，确认没问题，就把颜色去掉。


git clone ssh://youchang.huang@git.i-tetris.com:29418/apps/gladius/android/chery/e0x/apk_prebuilts 
apk_prebuilts里的Android.mk文件，
LOCAL_VENDOR_MODULE := true 表示 apk将被放到 vendor 目录；
没有写LOCAL_VENDOR_MODULE 或者 LOCAL_VENDOR_MODULE := false,会把apk放到system

LOCAL_VENDOR_MODULE := true 表示apk将被放到 vendor/pri-app或者system/pri-app下
LOCAL_VENDOR_MODULE不写或者LOCAL_VENDOR_MODULE := false,apk将被放到vendor/app或者system/app下

配置 
LOCAL_PRIVILEGED_MODULE := true  
LOCAL_SYSTEM_EXT_MODULE := true 
可以将apk配置到 /system/system_ext/priv-app 下

还有其他配置可以把apk放到data下。
在Android.mk通过设置LOCAL_CERTIFICATE实现。如：LOCAL_CERTIFICATE := platform即选择platform来签名。
注：预置无源码的apk应用时，很多时候仍然使用原本第三方签名，LOCAL_CERTIFICATE := PRESIGNED。


推ic_service步骤：

adb root;adb remount
adb push ic_service /sdcard
adb shell
cp /sdcard/ic_service /ota/ 
telnet cdc-qnx
root
mv /usr/bin/ic_service /usr/bin/ic_service_bak
cp /ota/android/ic_service /usr/bin/
reset

恢复：ic_service
adb shell
telnet cdc-qnx
root
mv /usr/bin/ic_service /usr/bin/ic_service_bad
mv /usr/bin/ic_service_bak /usr/bin/ic_service   
reset 


推ais_vision_server步骤：

adb root;adb remount
adb push ais_vision_server /sdcard
adb shell
cp /sdcard/ais_vision_server /ota/ 
telnet cdc-qnx
root
mv /usr/bin/ais_vision_server /usr/bin/ais_vision_server_bak
cp /ota/android/ais_vision_server /usr/bin/
reset

恢复：ic_service
adb shell
telnet cdc-qnx
root
mv /usr/bin/ic_service /usr/bin/ic_service_bad
mv /usr/bin/ic_service_bak /usr/bin/ic_service   
reset 

查看ic_service进程在不在
ps -e | grep ic_  


查看当前板子上window 有哪些
adb shell dumpsys window windows > 1.txt
在1.txt这个文件中，通过  Window #可以找到具体的包名

adb shell am force-stop com.lion.media 可以杀掉这个包名对应的进程


anr日志分析流程：

1. watchdog: Blocked in handler on ActivityManager (ActivityManager)
      说明ActivityManager这个线程被blocked了（ActivityManager是system_server的一个线程）

  
2. 查看ActivityManager线程的堆栈状态：
  "ActivityManager" prio=5 tid=15 Blocked
  at com.android.server.am.ActivityManagerService$MainHandler.handleMessage(ActivityManagerService.java:1784)
  - waiting to lock <0x1a4c832a> (a com.android.server.am.ActivityManagerService) held by thread 61
  该线程在等待锁<0x1a4c832a>，这个锁被thread 61所持有
  
3.查看thread 61的堆栈状态：
   "Binder_5" prio=5 tid=61 Native
  at android.app.IActivityController$Stub$Proxy.appCrashed(IActivityController.java:222)
  at com.android.server.am.ActivityManagerService.crashApplication(ActivityManagerService.java:12297)
  - locked <0x1a4c832a> (a com.android.server.am.ActivityManagerService)
  at com.android.server.am.ActivityManagerService.handleApplicationCrashInner(ActivityManagerService.java:11838)
  at com.android.server.am.ActivityManagerService.handleApplicationCrash(ActivityManagerService.java:11820)
  这里可以看到tid=61的线程是AMS中的一个binder线程，而这个binder线程正在处理app crash，即在crashApplication方法中。由于
  当前处于monkey测试状态，所以会进入ActivityController的appCrashed方法。大致猜测可能是monkey进程的appCrashed被blocked住了，所以
  AMS的crashApplication方法也被blocked住了。
  
4，下面看一下monkey进程，搜一下“appCrashed”关键字，有如下log：
    "Binder_3" prio=5 tid=13 Blocked
  at com.android.commands.monkey.Monkey$ActivityController.appCrashed(Monkey.java:330)
  - waiting to lock <0x12a7bb9b> (a com.android.commands.monkey.Monkey) held by thread 1
  at android.app.IActivityController$Stub.onTransact(IActivityController.java:92)
  at android.os.Binder.execTransact(Binder.java:446)
   果不其然，appCrashed方法在等待锁<0x12a7bb9b>，而这个锁被thread 1锁持有。
   
5.看一下thread 1：
   "main" prio=5 tid=1 Native
  at libcore.io.BlockGuardOs.read(BlockGuardOs.java:230)
  at libcore.io.IoBridge.read(IoBridge.java:512)
  at java.io.FileInputStream.read(FileInputStream.java:177)
  at java.io.InputStreamReader.read(InputStreamReader.java:231)
  - locked <@addr=0x12c518a0> (a java.lang.ProcessManager$ProcessInputStream)
  at java.io.BufferedReader.fillBuf(BufferedReader.java:145)
  at java.io.BufferedReader.readLine(BufferedReader.java:397)
  - locked <@addr=0x12c51ac0> (a java.io.InputStreamReader)
  at com.android.commands.monkey.Monkey.commandLineReport(Monkey.java:458)
  at com.android.commands.monkey.Monkey.getBugreport(Monkey.java:497)
  at com.android.commands.monkey.Monkey.runMonkeyCycles(Monkey.java:1078)
  看到这里我们就明白了，实际上是IO阻塞了。这里可以大致说一下：在monkey测试的时候，当遇到anr\app crash等异常
  情况时，monkey会把这些异常情况写入文件中以供我们分析。monkey在写文件时，是调用“bugreport”这个shell命令来获取当前
  系统各进程的各线程的堆栈情况和状态的，而bugreport会得到大量的信息，所以如果在monkey测试时连续遇到anr/crash，有可能会导致
  这个写文件的过程很长，这样AMS通知monkey的appCrashed的方法就会被blocked住，进而导致AMS被blocked住。
  

注意：如果  "main" p 主线程日志里，没有出现 locked,sleep等线程的生命周期的字样，只出现了MessageQueue，说明是无效trace，这种trace属于发生anr后，没有抓到现场的。
需要分析main log，找到anr，是actvity就往前倒推5秒，分析用户行为，看看能否找到猫腻；是Service就往前倒推10秒；BroadCast就往前倒推20秒看用户行为。

无效trace的例子：
"main" prio=5 tid=1 Native
  | group="main" sCount=1 dsCount=0 flags=1 obj=0x72101338 self=0xb4000074ce1cd010
  | sysTid=3588 nice=-10 cgrp=default sched=0/0 handle=0x7654b374f8
  | state=S schedstat=( 24985187454 4197573928 36117 ) utm=647 stm=1850 core=0 HZ=100
  | stack=0x7fe9052000-0x7fe9054000 stackSize=8192KB
  | held mutexes=
  native: #00 pc 000000000009c0b8  /apex/com.android.runtime/lib64/bionic/libc.so (__epoll_pwait+8)
  native: #01 pc 0000000000019ad0  /system/lib64/libutils.so (android::Looper::pollInner(int)+184)
  native: #02 pc 00000000000199b0  /system/lib64/libutils.so (android::Looper::pollOnce(int, int*, int*, void**)+112)
  native: #03 pc 0000000000110f80  /system/lib64/libandroid_runtime.so (android::android_os_MessageQueue_nativePollOnce(_JNIEnv*, _jobject*, long, int)+44)
  at android.os.MessageQueue.nativePollOnce(Native method)
  at android.os.MessageQueue.next(MessageQueue.java:335)
  at android.os.Looper.loop(Looper.java:183)
  at java.lang.reflect.Method.invoke(Native method)
  at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:596)
  at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:947)


在android/log里，zgrep anr * 过滤出：
logcat.log.086_1970_01_01_08_55_02.gz:01-01 08:54:29.526719   978  2926 I am_anr  : [0,3588,com.android.systemui,818462223,Input dispatching timed out (baa95ee BottomCarSystemBar (server) is not responding. Waited 5003ms for MotionEvent

从日志logcat.log.086_1970_01_01_08_55_02.gz， is not responding  这里往前找秒，发现日志如下：

01-01 08:54:24.118478   269   269 I lowmemorykiller: Reclaimed 0kB, cache(59120kB) and free(12176kB)-reserved(73732kB) below min(73728kB) for oom_adj 0
01-01 08:54:24.118509   269   269 I lowmemorykiller: Suppressed 76 failed kill reports
01-01 08:54:24.184827  2933  2945 V WRSOMEIP: Local: Ping from Client: [0x6872]
--------- switch to events
01-01 08:54:19.163578   407  3035 I liblog  : 59
01-01 08:54:24.279495  1521  1556 I dvm_lock_sample: [com.mega.car,0,MessageProperty,204,MessageQueue.java,337,android.os.Message android.os.MessageQueue.next(),-,600,boolean android.os.MessageQueue.enqueueMessage(android.os.Message, long),40]
--------- switch to main
01-01 08:54:24.668544   442   454 E message_center: onReceive callback already died

很明显，是内存不足。

股份项目的逻辑是：
MCU负责接入方控信号，识别按键按下，抬起的状态；
QNX负责判断长按和短按，并封装键值，传给各个模块；
Android和仪表负责接收键值并响应



ubuntu 预览webp图片
sudo add-apt-repository ppa:helkaluin/webp-pixbuf-loader
sudo apt update
sudo apt install webp-pixbuf-loader

三方应用调用系统api，可能会调用不到，需要在
AndroidManifest.xml加上  android:sharedUserId="android.uid.system"，配置成系统应用

如果install的应用，和系统中内置的相同包名的应用的sharedUserId不一样，会存在装不上的情况install_failed_shared_user_incompatible
需要先手动卸载 系统里内置的apk
adb shell pm path com.mega.redwoodautolinetest
看下路径在哪里, 然后删除这个路径下的apk,adb reboot, 然后在 adb install


查看当前目录下，各个文件的大小：
du -sh *

adb shell wm density

adb shell wm size

seLinux权限问题，需要总结起来


如果板子运行软件，无法debug，用cat /etc/version 看下软件是userdebug还是user版本。user版本无法debug。或者重启自己的电脑试试

雄狮畅听需要配置车架号：调试方法
adb shell am start -n com.lion.os.service/com.lion.os.service.activity.MainActivity
Tsp平台信息 -> 右上角全部测试 ，返回 -> 点击 模拟测试开关 ，测试开，测试未到期，返回 -> 点击 车辆信息，输出车辆识别码 ，完成。

adb shell settings put  global persist.sys.lion.sim.active 1
个人中心激活

命令行开启ota升级页面：
adb shell am start -n com.mega.ota.test/com.mega.ota.test.UpdateDialog

埋点测试环境切换：
adb shell am start -n com.lion.os.service/com.lion.os.service.activity.MainActivity
Tsp平台信息 -> 数据埋点，点击测试环境 

设置车辆识别码：

adb shell settings put global isTestMode 1
adb shell settings put global isTestDev 1

adb shell settings put global TestVin E03TEST8155000035
adb shell settings put global TestSn FCOT23#E0300035#
adb shell settings put global TestIccId 89860920703041500035

可以看到有没有设置成功或者系统中有没有这个数据。
adb shell settings  get global TestVin

注意：给实车写入三码数据，注意不要执行adb root。 如果不确定是否执行过adb root,请先 adb reboot后，再写入数据。
如果  执行adb root，再写入数据，数据很容易丢失。

还有代码中通过provider写入settings的数据，都放在：/data/system/users/0/settings_global.xml 这个文件中，通过 cat settings_global.xml可以将xml打印出来。

adb root后写入的数据，比如：adb shell settings put global TestVin E03TEST8155000035   其 package="root"，很容易丢失。

MegaSettings监听值的变化：
   MegaSettings.putIntForUserGlobal(null,"name",0,-1)
        Settings.Global.getUriFor("name");
        mContext.getContentResolver().registerContentObserver(Settings.System.getUriFor(DVR_RECORD_STATE), false, new ContentObserver() {
            @Override
            public void onChange(boolean selfChange) {
                super.onChange(selfChange);
            }


查看所有配置字信息：
adb shell getprop


如果有遇到 弹窗需要 毛玻璃效果的，可以考虑继承这个：mega.blur.view.BlurDialog或者 RWBlurDialog




一般系统应用，system或者vendor下面的，都有权限在sdcard里读写。


使用voy_ut工具，写三码数据到板子里：
adb root;adb remount 
adb push voy_ut /sdcard 

adb shell

 cp /sdcard/voy_ut /ota                                                                     
telnet cdc-qnx
login: root

# cp /ota/android/voy_ut /data
# chmod +x /data/voy_ut 

# /data/voy_ut -w sn -p FCOT23#E0300035#   
[VoyTee-UT] : <main> : <212> : parseOpt: 5, 0, 1
# /data/voy_ut -r sn                     
[VoyTee-UT] : <main> : <212> : parseOpt: 6, 0, 1
fn:sn, data:FCOT23#E0300035#
fn:sn, len:16

46 43 4f 54 32 33 23 45 30 33 30 30 30 33 35 23 
# /data/voy_ut -w vin -p E03TEST8155000035
[VoyTee-UT] : <main> : <212> : parseOpt: 5, 0, 1
# /data/voy_ut -r vin                      
[VoyTee-UT] : <main> : <212> : parseOpt: 6, 0, 1
fn:vin, data:E03TEST8155000035
fn:vin, len:17

-w后面是名字  -p 后面是数据

提示一下: 安全存储区的特性：
RPMB没开情况，OTA刷机存在安全存储空间不会被刷掉。qfil和fastboot会刷掉。

RPMB没开情况，写到安全存储区，再开RPMB，安全存储区的数据会丢失！！！

RPMB开启情况下，任何刷机都不会清除安全存储区数据。但无法使用安全启动。

怎么判断安全存储区是否开启？
Qnx侧输入下面指令
QSEEComAPI_Sample -v smplap32 14 1
然后输入2，返回0表示已经开启。

实际体验下来：
sn码写进去重新上下电不会丢失数据
vin码重新上下电，丢失，王峰排查结果是重启时，vin码在mcu被重写了。
张忠毅给出解决方案：
msg_center_test -t uartrpc_svc/uds/req '~!b:0x030x010x000x0f0x010x0e0x800x2e0xf10x90 + 数据
0xf10x90 + 数据内容， 用一个hex表示，比如'1' => 0x31
字符和
进制对照表：https://www.qqxiuzi.cn/bianma/ascii.htm
如果写这个vin:
E03TEST8155000035
msg_center_test -t uartrpc_svc/uds/req '~!b:0x030x010x000x0f0x010x0e0x800x2e0xf10x900x450x300x330x540x450x530x540x380x310x350x350x300x300x300x300x330x35'



和qnx侧新增topic，需要重新打carService推进去，重启后才能生效。


systemui本地运行：
 ./../../gradlew clean && ./../../gradlew :Redwood:RedwoodSystemUI:assembleDebug --info && adb root && adb remount && adb push ./build/outputs/apk/debug/RedwoodSystemUI.apk /system/system_ext/priv-app/RedwoodSystemUI/RedwoodSystemUI.apk && adb shell killall com.android.systemui


查看依赖关系
./../../gradlew -q Redwood:RedwoodSystemUI:dependencies


提交apk的，cp到别的分支的时候，如果出现冲突，就要注意 cp过去的apk是否空掉

可以看到分支合入了哪些代码：
branch:release/redwood_hqx.1.2.1_20230410 status:merged

chmod a+x a.txt 意识是给所有用户，a.txt的执行权限。

notepad安装
sudo snap install notepad-plus-plus


代码检查：
java -jar ../../cores/modules/checkstyle/diff-checkstyle-v0.0.3.jar -c ../../cores/modules/checkstyle/megaos-java-checks.xml ./src


警告：您正丢下1个提交未和任何分支关联：
git branch  <新分支名> 41250fc
通过这个命令行来创建新分支，并把这次提交上去。
然后切换到你想提交的分支，执行 git cherry-pick 41250fc   
然后在git push



android5.0以后不允许隐示启动servcie或这广播，必须指定service类名。



#!/bin/bash
echo "@A20230314" | sudo -S bash vlan_chery.sh && python3 display_gui_chery.py



adb exec-out cmd overlay enable com.mega.btphone.bright
在蓝牙界面，可以看到能切换主题成功。说明配置的overlay.apk没问题。


huangyouchang@huangyouchang:~$ uname -m
x86_64

查看apk签名：
keytool -printcert -jarfile RedwoodSystemUI.apk


工程模式写入avm，会导致外置功放的配置失效
解决方案：Qnx 输入这个命令后重启 ecu_config_utility -c


工程模式app，使用代码运行到板子上，点击 日志导出，报错：
java.lang.UnsatisfiedLinkError: dlopen failed: library "/system/lib64/libMegaLogger.so" needed or dlopened by "/apex/com.android.art/lib64/libnativeloader.so" is not accessible for the namespace "classloader-namespace"
        at java.lang.Runtime.loadLibrary0(Runtime.java:1087)
        at java.lang.Runtime.loadLibrary0(Runtime.java:1008)
        at java.lang.System.loadLibrary(System.java:1664)
恢复出厂设置后，再点击日志导出，正常。感觉和代码运行有关系。        


过滤日志：
logcat | grep AndroidRuntime   


修改设备分辨率：
adb shell wm size 2560x1440
设置density
adb shell wm density 240


adb shell logcat | grep BCM_MFS_Swt  一定要注意大小写，后面的过滤条件要跟矩阵表的一致。

logcat | grep SomeIp 过滤someip信号

要想信号可以收到连续值，请在topic上做如下配置：
   @PropertyDefine(
            subscribe = "DMS/QnxHealthMessage",
            type = String.class,
            changeMode = CarPropertyConfig.VEHICLE_PROPERTY_CHANGE_MODE_CONTINUOUS
    )


媒体测试：
adb shell am start -n com.mega.audiotesttools/.MainActivity
adb shell am start -n com.mega.redwoodautolinetest/autolinetest.ui.activity.AutoLineMainActivity
adb shell am start -n com.mega.redwoodautolinetest/com.autolinetest.ui.activity.StaticAgingTest2Activity
命令行和u盘都可以拉起EOL app
1.命令行：
adb shell am start -n com.mega.redwoodautolinetest/autolinetest.ui.activity.AutoLineMainActivity
2.u盘拉起，需要在u盘里新建文件夹：AutoEOLtest，然后系统版本要2月23号以后的版本


git branch -vv 查看本地分支指向的远端分支是啥

git branch -d 分支名 删除分支，前提是本地要切换到这个分支以外的分支

Ubuntu下安装adb和fastboot方法如下：

sudo apt-get update
sudo apt-get install android-tools-adb 
sudo apt-get install android-tools-fastboot


fastboot 模式下快速刷机

$ adb root
$ adb shell
$ telnet cdc-qnx
$ root

执行脚本，进入9008模式(fastboot模式)：
# enter_fastoot_mode.sh
在 /qfi_bin/common/build 目录下执行终端：
python3 fastboot_complete.py --pf=8155_la --st=ufs

上面刷机脚本执行完以后，系统不会自动重启，需要执行reboot命令：
 fastboot reboot



https://mastergo.com/

导出的图片复制进去 按数字几5就是50%的透明度
两张图片都复制进去
然后两张图都选中然后对齐就行


打开布局边界：
adb shell
setprop debug.layout true
这时命令不会立即生效，需要重新打开应用


吸色器：gpick


进程查看：
adb shell ps -e | grep -E "systemui|hvac"


https://coverity.i-tetris.com/query/defects.htm?project=CDC_IFS&cid=12353221
ifshefei
123456




后台看到车型等信息：
mega.chery.tsp.RegisterVidController



语音调试页面：
adb shell am start -n com.mega.audiotesttools/.MainActivity

android源码目录：
android/frameworks/base/core/java/android/

过滤当前window：
adb shell dumpsys window

过滤当前上层的actvity：
adb shell "dumpsys activity | grep mResumedActivity"




https://apps.microsoft.com/store/detail/%E4%B8%B2%E5%8F%A3%E8%B0%83%E8%AF%95%E5%8A%A9%E6%89%8B/9NBLGGH43HDM?hl=zh-cn&gl=cn&cid=ifdef
window下用这个串口工具更好用点


使用以下命令查看APK签名：(只能看v1签名)
jarsigner -verify -verbose -certs app-release.apk
有v2签名的，可以用这个：
apksigner verify -v --print-certs xxx.apk 


RW-我的仪表 看板：
http://jira.i-tetris.com/secure/Dashboard.jspa?selectPageId=13050#


adb shell setprop show.wheel.help 1 给属性show.wheel.help设置值为1 ，之前需要 adb root;adb remount 
adb shell getprop show.wheel.help  返回 1
代码中对应：MegaSystemProperties.getInt("show.wheel.help",0); 
MegaSystemProperties.set("show.wheel.help",1);

privapp权限增加：
在device仓库下（git clone ssh://git.i-tetris.com:29418/qcom/sa/quic/la/vendor/mega/device/redwood）
privapp-permissions-redwood.xml 文件中添加需要的文件。如果缺失权限，在系统的报错日志里，会给出具体缺哪些权限，缺一个报一个，缺两个会报两个。把日志里缺失的权限都加上

privapp-permissions-redwood.xml这个文件在板子里的目录是：/vendor/etc/permissions/privapp-permissions-redwood.xml

验证方式：adb pull /vendor/etc/permissions/privapp-permissions-redwood.xml，在privapp-permissions-redwood增加需要的权限，然后再推到 /vendor/etc/permissions/。重启验证。
未找到systemui的权限在哪里


地图权限配置：
1.参考 https://git.i-tetris.com/c/qcom/sa/quic/la/vendor/mega/device/samoa/+/146916  照着merge到其它项目
2.雄狮地图是放在 vendor/app目录下（貌似放在其他目录，也是这样配置），在这个文件 sepolicy/seapp_contexts中添加
user=_app seinfo=platform name=com.lion.appfwk.navi domain=platform_app type=app_data_file
3.另外地图应用manifest中需要添加权限android.permission.ACCESS_MAP
4.https://docs.google.com/document/d/10EgW1RqKabQHwh_Vv_VOHrZWLovSPT_d8lgYZ5cLB30/edit
以上流程，由 贺冰 指导。



AA方控的逻辑，都在redwood 0522分支改。
国际的在各个代码的主线分支改；打包是单独的项目，device是从e0x独立出来的。

主题apk安装以后，调用ThemeControl里主题切换方法，可以直接切换；
如果把主题apk拷贝到 vendor/overlay目录下，需要重启后，再调用ThemeControl里主题切换方法才能生效。



大家分析是对手件问题的，请严格按照以下流程走起来：
1. 备注写明分析的依据和证据；
2. EpicLink标记为对手件问题；
3. 问题经办人指给同步专员：李静杰
4. 标签里打上：合作方_XX（例如奇瑞的问题就选合作方_奇瑞）

如果板子连电脑连不上，做如下排查：
1.确认是adb模式：工程模式中切换或者u盘根目录的.usb脚本
2.确认电源开启前允许的电流大于5A
3.确认电压大于12V小于14V
电压太大/太小或则电流太小，都会导致 adb无法识别。

下线配置页面都是0的原因，MessageCenterUtil: [ (MessageCenterUtil.java:131)#sendMessage ]send msg, topic=internal_uds/req 发送的请求，但是没有返回；或者返回的都是0


大家尽量按照这个来关闭bug
【原因】切换模式，界面activity会走destroy。而unity和activity生命周期一致，导致unity走destroy。unity在destroy的时候会杀死当前进程。
【解决方案】修改unity和activity生命周期的一致性，切换模式时，禁止unity走destroy。
【验证】已经修复，在20230810之后的apk验证



【Ubuntu】解决中文变繁体
系统中文输入法默认成为了繁体中文
解决：输入法切换成中文，然后 ctrl + shift + f
使用上面三个组合键，按一次切换成简体，再按一次成繁体...

Android adb获取手机 cpu架构（arm64-v8a 等平台）
adb shell
getprop ro.product.cpu.abi
arm64-v8a

日志中：表示进程启动，1668 就是进程号，通过进程号可以在nodpad++,ctrl+f,find incurrent 找到进程的日志，然后看看进程在哪里停止，就表示进程死亡。
I am_proc_start: [0,1668,1000,com.android.car.settings

主机重启：
PowerManagerService     system_process                       D  reboot, reason = null caller pid: 28276, Caller uid: 1000
可以看到是pid 28276 的进程发起的重启。

ubuntu文件无权限操作，
sudo nautilus
在打开的文件管理器里操作。


外部jira车控筛选器：
(project = RW AND issuetype = Bug AND status not in (Closed, Resolved) AND "Vehicle Model(必填)" in (E03, "All", cascadeOption(none)) AND 史诗链接 != RW-1292 AND labels not in (三无问题) OR project = RW AND issuetype = Bug AND status not in (Closed, Resolved) AND "Vehicle Model(必填)" in (E03, "All", cascadeOption(none)) AND labels is EMPTY) AND priority = "P1->High" AND assignee in (youchang.huang, ningning.qi, bin.xu, xiaolong.zheng, baojun.hu, baocheng.dong) AND created < "2023-08-22 17:00" ORDER BY assignee ASC


刚开始使用滚轮按键监听，需要注意没有使用最新
implementation "mega.core:car:$carVersion"
    implementation project(':cores:car-lib')
    会报下面的错误：
08-30 19:38:50.599  1616  1890 I InputCaptureClientController: [ (InputCaptureClientController.java:731)#dispatchCustomRotaryEvent ]dispatchCustomRotaryEvent CustomRotaryEvent{mInputCode=30, mRotaryTimes=2, mSeq=0, mEventTime=63924}, callback : mega.car.input.ICarInputCallback$Stub$Proxy@f4b4fe3, clientBinder:android.os.BinderProxy@1fa5de0, client pid: 2758
08-30 19:38:50.599  2758  2780 I mega.controlle: oneway function results will be dropped but finished with status UNKNOWN_TRANSACTION and parcel size 0

oneway function results will be dropped but finished with status UNKNOWN_TRANSACTION
需要把报错的进程删掉，然后再试试。
仪表那边可以先不用管，Android侧自己用命令来模拟发滚轮键的信号就行
adb shell 下模拟发命令
左侧滚轮keycode 30 向上滚动2次
msg_center_test -t KeyInput/RotaryEvent {value:{keyCode:30,rotaryTimes:2}}


外部jira帐号：
youchang.huang
fz^qZ8w3WsuXWdEb



关于三码：
新下线车子，f18c等需要博泰克去写，写入后就可以读到三码。
t1x 是通过mcu 读取，需要确认e0x是通过mcu读取还是someip信号读取，t1x移植的过来的方式还适用么？

使用陈浩给的真实三码写入方式，去写入三码，试试这个方式能读取到么（此方法不可以外传，我们的测试也不要给）
writeVinSN.sh   脚本里面的vin和sn改一下  然后adb root 之后执行下



adb shell logcat >logcat.log
搜集日志，然后 ctrl + c 停止  
gedit logcat.log 打开这个日志



adb shell am start -n com.mega.ota.test/com.mega.ota.test.UpdateDialog


根目录执行：
./gradlew :Redwood:RedwoodCarSettings:clean && ./gradlew :Redwood:RedwoodCarSettings:assembleDebug





蓝牙协议的问题，需要罗能强看下
framework问题找张忠毅

方向盘需求问题找 周倪青
TBOX接口找张忠毅


globalid使用三码生成，三码不变，globalid不会变。如果实车三码没有变化，globalid就不会过期。
globalid过期，是因为三码被占用了，也只会出现在测试场景
使用实车真实三码，不会有这个问题。

vin码在车子下线时 诊断仪写入ECU内，通过 CarPropHelper.getPropertyRaw(Ecu.ID_VIN)读取。

不使用系统签名或者系统配置android:sharedUserId="android.uid.system"，在AndroidManifest.xml 里加权限：

 <uses-permission android:name="mega.car.permission.CAR_POWER" />
    <uses-permission android:name="mega.car.permission.VEHICLE_CONTROL" />
    <uses-permission android:name="android.permission.INTERACT_ACROSS_USERS_FULL" /



三方在使用系统的megacar的时候，需要使用系统的签名，否则会报错：
[ (MegaCar.java:300)#createCar ]car_service not ready, waited for car service (ms):40000
java.lang.RuntimeException
at mega.car.MegaCar.createCar(MegaCar.java:300)
at mega.car.MegaCarPropHelper.<init>(MegaCarPropHelper.java:56)
at mega.car.MegaCarPropHelper.getInstance(MegaCarPropHelper.java:92)
at mega.car.MegaCarPropHelper.getInstance(MegaCarPropHelper.java:81)
at com.mega.ecology.chery.CarInfoControl.init(CarInfoControl.java:143)
at android.app.ActivityThread.access$1300(ActivityThread.java:237)
at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1913)
at android.os.Handler.dispatchMessage(Handler.java:106)
at android.os.Looper.loop(Looper.java:223)
at android.app.ActivityThread.main(ActivityThread.java:7664)
at java.lang.reflect.Method.invoke(Native Method)
at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:947)


使用同一个shareId，系统会认为是相同的应用。
对其中一个做了sd卡权限授权，其他的也就授权了。
麦克风，位置，摄像头 三个权限可以通过开关去打开关闭。


语音问题，可以通过 requestAudioFocus 搜索代码，看看哪里请求了焦点。


启动tsp测试页面
adb shell am start -n com.mega.carrepair/.ui.TspTestActivity

install apk报错：
adb: failed to install RedwoodCarSettings.apk: Failure [INSTALL_FAILED_TEST_ONLY: installPackageLI]
解决方法：adb install -t test.apk


grep -rn "abcd"  可以从当前目录中过滤出abcd字段。

查看某个app的version：
adb shell pm dump com.lion.media |grep -i "version"

user版本强制安装apk
安装apk，可以使用 adb isntall -r -t apk


输入这个命令切换白天黑夜模式：adb shell "su 0 cmd uimode night yes"



livedata有时间限制，dowrite到接收信号回调中间有2秒限制;如果不是和UI相关的，就不应该使用LiveData，而且LiveData短时间内postData会有丢值的问题
AreaLiveDataStore.obtain(ID_MFS_SWITCH_MODE.getId()).observeForever(mObserver);
不使用livedata，可以直接使用 

EntryLocks.ID_DOOR 对应主驾车门信号：BCM_Door_FL  0xA400 8004


车辆升级的是
adb shell am start com.carota.chery.v5/com.chery.ui.activity.main.MainActivity


on -T msg_center_t -u msg_center msg_center_test -t update/mode '{"extension":null,"relative":false,"time":0,"type":4194304,"unit":"","valid":true,"value":1}'


查看android进程是否起来：
redwood:/ # ps -e | grep auto
audioserver     415      1 12347996  4748 binder_thread_read  0 S android.hardware.automotive.audiocontrol@2.0-service
vehicle_network 416      1 12996180 105380 binder_thread_read 0 S android.hardware.automotive.vehicle@2.0-mega-service
vehicle_network 417      1 12525520  6456 do_epoll_wait       0 S android.hardware.automotive.vehicle@2.0-service
system          460      1 12366308  4624 binder_thread_read  0 S vendor.qti.automotive.qcarcam@1.0-service
system         4562    369 17346288 192272 do_epoll_wait      0 S com.iflytek.autofly.sceneengine
system         4690    369 17021092 129316 do_epoll_wait      0 S com.iflytek.autofly.accountcenter
system         4895    369 16733808 109852 do_epoll_wait      0 S com.iflytek.autofly.platformservice
u0_a30         5065    373 2689032 185612 do_epoll_wait       0 S com.iflytek.autofly.iqiyi


    int pdu1H = -16416000;
        MLog.d(TAG, "parse pdu1H = " + Integer.toBinaryString(pdu1H));
        int data = pdu1H >> 24; //高位补的都是1 
         int len = (pdu1H >>> 24) - 1; //高位补的都是0.很多情况下，需要高位补0
        MLog.d(TAG, "parse data = " + data);
        MLog.d(TAG, "parse data = " + Integer.toBinaryString(data));


 ps -ef | grep center
 
电源模式对应  d1：on    d2：comfort  d3：off

空调push进去vendor/priv-app/RedwoodHvac/：
adb shell 
cd vendor/priv-app/RedwoodHvac/
mv RedwoodHvac.apk RedwoodHvac.apk.bk
reboot
然后推空调的apk，重启。（要先把你本地这个apk 改个名字）
现在直接push 会unity那个so 找不到的问题
所以改成了install 的方式     起来后 可能要手动点击把进程起起来
install 的 话 相当于是普通app了  进程不会自启 ，调试的是时候第一次启动很慢是正常的
如果改dock栏了 install 0 应该可以直接推SystemUI


将纵置增程在0703分支添加的代码，merge到1115分支的经验：
先切换到carservice 1115分支，把 carservice 0703整体合并到 1115,肯定会有几个类冲突。
然后新建文件夹，单独把carservice工程落下来，切换到0703分支,查看上面冲突的几个类的提交记录，把改动的地方拷贝到 1115分支对应的类里。
然后再统一提交到1115分支。

carsetting的国际分支 feature/kirkwood_hqx.1.2.1_20231031


国际的android.mk在master分支;device.mk在sop/1004分支。



横置增程：feature/redwood_hqx.1.2.1_20230919 配置字： String carEngine = MegaSystemProperties.get("persist.sys.car.engine", ""); 
IS_REEV = TextUtils.equals(carEngine,"reev_can");

纵置增程：feature/redwood_hqx.1.2.1_20231115  配置字： 驱动动力形式;00,纯电动;01,增程
纵置增程和主线一样，使用someip

空调语音处理，会有此日志：
 (HvacVoiceManager.java:43)#handlerOperation ]handlerOperation = {"mode":"座椅加热","name":"座椅","mNameValue":{"direct":"+","offset":"3","ref":"ZERO","type":"SPOT"},"operation":"SET","mService":"carControl","mUser":"2"}


出风口角度的调节：跟出风模式关联  自由风可以上下左右调，其他模式只能上下调


拖动出风口，没有发出去信号：
UnityLine: [ (UnityLine.java:567)#ventChange ]tag = 2, h = 69, v = 0
UnityLine.java:718)#syncData ]tag = 0,sH0 = 0, currentH = 4, sV0 = 24, currentV = 87, sCountH0 = 1
UnityLine: [ (UnityLine.java:782)#onShowBar ]onShowBar:false
UnityLine: [ (UnityLine.java:579)#lambda$ventChange$0 ]user operated end cancel

ventChange方法是由unity调用，这个方法里有很多拦截判断，可能是被拦截了。


通过配置字调出车辆设置的驾驶模式：驾驶模式配置字修改成：
E03是10010
E0Y是10001


CarRepairApplication 通过请求 TBoxSignal.TBOX_SYSTEMINFO_SIM_CARD_INFO RR的方法请求返回了ICCID等数据，
给三方提供的方法里 CarInfoControl.getInstance().getIccId()，生产环境里，是通过 VehicleBody.ID_T_BOX_ICCID 信号来获取ICCID。

RR 信号TBoxSignal.TBOX_SYSTEMINFO_SIM_CARD_INFO，在TBoxConverter 里和VehicleBody.ID_T_BOX_ICCID关联起来，
所以只要   CarRepairApplication 或者 TBoxBaseFragment 创建了，就会发RR方法，进而 通过 VehicleBody.ID_T_BOX_ICCID 也能读到 ICCId。

为了防止异常（三码被清掉（VehicleBody.ID_T_BOX_ICCID 在内存中被清掉），但是CarRepairApplication进程又是在的，无法执行CarRepairApplication的onCreate方法，无法发送RR方法），
在CarRepairApplication 请求RR回来的时候，把三码保存到Setting里。
Settings.Global.putString(mContentResolver, "ProVin", mVinNumber);
Settings.Global.putString(mContentResolver, "ProSnNumber", mSnNumber);
 Settings.Global.putString(mContentResolver, "ProHuId", mHuId);
 Settings.Global.putString(mContentResolver, "ProIccId", mIccIdNumber);
 这些码只能用于生产环境。测试环境逻辑保持不变。


防止高斯模糊引起的异常崩溃
RW-35075


RWSwitch 按钮，不要调用setCheck方法，会造成死循环。 调用 setCheckedStatus 


禾多avm 监听方控的代码：
mSequoiaAvmInfo = new SequoiaAvmInfo(this);
/**
 * 方向盘按键
 */
inputCodeEventListener = new InputCodeEventListener() {
    @Override
    public void onInputCodeShortClick(int inputCode, int eventType) {
        super.onInputCodeShortClick(inputCode, eventType);

        if(inputCode == mega.car.config.KeyInput.KeyCodeEnum.LEFT_SELECT
                && (eventType == Constants.EVENT_TYPE_AVM)){
            //AVM自定义按键事件
            //Toast.makeText(getApplicationContext(), "发送指令AvmActiveReq，显示AVM", Toast.LENGTH_SHORT).show();
            //mSequoiaAvmInfo.setAvmActive(0x03);
            Log.d("getSignalkey","getSignalkey111");
            mSequoiaAvmInfo.setAvmActive(0x03);
            Log.d("getSignalkey","getSignalkey222");
        }
        MLog.d("inputCode = " + inputCode + " eventType= " + eventType);
    }
};
//Toast.makeText(getApplicationContext(), "方向盘按键注册成功", Toast.LENGTH_SHORT).show();
//KeyEventControl.getInstance().unregisterInputCodeListener(inputCodeEventListener);
KeyEventControl.getInstance().requestInputEventCapture(inputCodeEventListener);



针对10.23号及以后的版本台架自动重启问题：
1、不接以太网盒子，不会触发心跳重启检测；
2、接了以太网盒子，必须按照以太网物理层配置一个vcc的配置，步骤如下：
sudo ip link set dev 网卡 down
sudo ip link set dev 网卡 address 02:51:52:00:00:07
sudo ip link set dev 网卡 up
sudo ip link add link 网卡 name enx.62 type vlan id 62
sudo ifconfig enx.62 192.168.62.7/24 broadcast 192.168.62.255 up
3、·在qnx禁用vcc检测
touch /persist/disable_vcc
以上三种方式都可以解决这个问题




fragmentHost.getFragmentManager().beginTransaction()
                    .add(R.id.mega_havc_bar, mHvacFragment)
                   .commit();
这种方式添加底部 dock栏，在恢复出厂设置第一次进入或者重启的时候，会明显比较慢。根据log，commit后到 fragment执行onCreate方法，可能间隔了六七秒，通过trace文件看，大部分时间浪费在系统创建fragment。
优化方案：抛弃fragment，直接使用view。              
                   
车机序列号即huid的获取方式：通过 Ecu.ID_ECU_SN 读取，不区分测试环境和生产环境。                   
                   
                   
                   
                   
                   
                   
11-24 11:00:35.328552  4564  4564 D BehindActivity2: [ (BehindActivity2.java:315)#lockScreen ]lockScreen(false)
11-24 11:00:35.328948  1125  1509 I AS.AudioService: getStreamVolume(stream=STREAM_ASSISTANT vol 5) in fixed volume mode
11-24 11:00:35.329286  4564  4564 D SignalManager: [ (SignalManager.java:170)#getIntProperty ]getIntProperty From INT_CACHE,key = 1342177302#0, id = 1342177302, area = 0,value = 1
11-24 11:00:35.329458  1446  4905 D CAR.AUDIO: getVolumeGroupIdForUsage usage:16
11-24 11:00:35.329720  1647  1950 D RedwoodSomeIpProperty: [ (RedwoodSomeIpProperty.java:176)#getProperty ]getProperty, prop: 1728053432
11-24 11:00:35.330609  4564  4564 D SignalManager: [ (SignalManager.java:178)#getIntProperty ]id = 1728053432, area = 0, getPropertyRaw = null
11-24 11:00:35.331015  4012  4012 E ThemeUtils: View class com.mega.chery.widget.EasyImageView is an AppCompat widget that can only be used with a Theme.AppCompat theme (or descendant).         
                   
                   
                   
relaunch activity引起的闪屏:BehindActivity2 执行完成的生命周期方法后，重新创建，重新走生命周期
--------- switch to events
11-24 11:01:09.841286  1125  1895 I wm_relaunch_resume_activity: [0,18662583,1777,com.mega.redwoodhvac/.view.behind.BehindActivity2]
https://blog.csdn.net/wds1181977/article/details/45914489

                   
                   
日志过滤  LionMediaSlicePr  可以看到雄狮给额媒体的播放状态
                   
                   
工程模式退到后台，要注销方控按键监听
Jira-Id: RW-35730            
                   
                   
e0y 副驾座椅电动调节：为 0 1 2 时，只显示位置，没有腿托为3时，有腿托 。  


打开方向盘调节后点击空白处退出，滑动方控键仍可调节方向盘
RW-58885
在3.14已经修复。请使用3.15以后的版本验证  

   

抽空看看公司的开发文档，学习使用，特别是新入职的同学，比如
app 性能优化的文档
https://docs.google.com/document/d/1EJdZO0Yr_oKjfWqz6Kha1uvzpUJSEoBAiTwrlkaWX40/edit#heading=h.8xotg6t3vyhs
https://docs.google.com/document/d/1iG3OUNwHTYuOFT1Q5RhWDzogcHDpwH2tmVPSjHQDmYQ/edit#heading=h.1z8l8k9ig7e7

各模块的介绍和架构设计：
https://drive.google.com/drive/u/0/folders/12ZlxxuFww_kOmCjJThnPWkW-mOLS_488         
                   
       
       后排黑屏，优先看 后排进程com.mega.redwoodhvac.behindscreen起来了没有，空调进程com.mega.redwoodhvac起来了没了，  BehindActivity2有没有异常。    
       
抬头显示的配置字，只有当 配置字=1的时候，hud功能才展示，等于2,是ar抬头显示，目前车子上没有装的，等于2的时候，代码里也不要显示hud功能             



按键日志通过 receive KeyInput/Event过滤看起来正常的，但是通过 Firing events 过滤出来的 日志，没有记录，说明没有应用拦截按键。
按键分发通过Firing events
过滤出来的日志里，没有雄狮媒体的进程，因为强制分发通道level force，没有打印Firing events，不走 Firing events流程。



现象：多次切换黑天白夜模式，后排屏黑掉
检索后排屏进程：
HealthManager: app: com.mega.redwoodhvac.behindscreen	,pid:5661, type:mega, max_fg:600, max_bg:600, adj:200, ToFg(ms):0, ToBg(ms):0, visiable:false, monitor:true, memUsed(MB):525.416

HealthManager: MSG_CLEAN_APP_INFOR, app:com.mega.redwoodhvac.behindscreen
猜测后排进程因为内存泄漏导致被健康管理app杀掉。
解释：当前消耗525M，还没有超过阀值是600M。有可能是剩余内存低太低，开始按照优先级杀后台超过120M的进程。 看一下前面的log，   搜一下 try to kill
HealthManager: try to kill app: com.mega.redwoodhvac.behindscreen, pid: 5661, reason:low memery kill background process,PSS(MB):525.416

另外可以 通过 lowmemorykiller 搜索杀了哪些进程
通过 Free RAM 可以查看剩余内存
通过 system_monitor查看 整体内存和cpu使用情况。





内存泄漏分析工具：Android Stuido Profiler
https://zhuanlan.zhihu.com/p/658732427  可以找到谁泄漏了，谁持有了泄漏对象



预制离线地图的数据 ： 是工厂预制，不是我们干的



mMediaLiveData.observeForever(this::updateMediaData);
这种语法唐造成的泄漏，反注册的时候，找不到。
改成：
 mMediaLiveData.observeForever(mSliceObserver);   

private Observer<Slice> mSliceObserver = new Observer<Slice>() {
        @Override
        public void onChanged(Slice slice) {
            updateMediaData(slice);
        }
    };



问题：处于导航组队，方控控制不了媒体，也控制不了导航组队
因为carplay拦截了焦点，导致系统的 CustomInputEventController收不到方控按键，也就无法分发给导航。媒体判断当前处于导航组队，就不响应了。


电源管理，日志中关键字 CAR.POWER

查看某个apk版本：
adb shell "dumpsys package com.mega.carsettings |grep versionName"

单个进程的CPU/内存：
adb shell
top -H -p pid(top 可以看应用的pid)

adb shell top 查看所有CPU/内存


adb shell
dumpsys SurfaceFlinger
白天黑夜来回点
出来的日志里搜索：GraphicBufferAllocator
GraphicBufferAllocator buffers:
0xb400007858c8cfb0: 15840.00 KiB | 2560 (2816) x 1440 |    1 |        1 | 0x933 | SurfaceView - HvacPanel#4
0xb400007858c8d0d0: 14400.00 KiB | 2560 (2560) x 1440 |    1 |        1 | 0x1a00 | FramebufferSurface
0xb400007858c8d3a0: 14400.00 KiB | 2560 (2560) x 1440 |    1 |        1 | 0x10000900 | HvacPanel#0
0xb400007858c8d790: 1560.00 KiB |  800 ( 832) x  480 |    1 |        1 | 0x1a00 | FramebufferSurface
0xb400007858c8dee0:    0.25 KiB |    1 (  64) x    1 |    1 |        1 | 0x10000900 | #2
0xb400007858c8e6c0:   11.00 KiB |   15 (  64) x   44 |    1 |        1 | 0x203 | RegionSamplingThread
0xb400007858c8e900:    0.25 KiB |    1 (  64) x    1 |    1 |        1 | 0x300 | placeholder
0xb400007858c8eab0: 1096.00 KiB | 1024 (1024) x  274 |    1 |        1 | 0x1a00 | FramebufferSurface
0xb400007858c8f050: 15840.00 KiB | 2560 (2816) x 1440 |    1 |        1 | 0x933 | SurfaceView - HvacPanel#3
0xb400007858c8f290: 14400.00 KiB | 2560 (2560) x 1440 |    1 |        1 | 0x1a00 | FramebufferSurface
0xb400007858c8f5f0:  770.00 KiB |  435 ( 448) x  440 |    1 |        1 | 0x10000900 | #3
0xb400007858c8fef0: 1560.00 KiB |  800 ( 832) x  480 |    1 |        1 | 0x1a00 | FramebufferSurface
0xb400007858c900a0: 1200.00 KiB | 2560 (2560) x  120 |    1 |        1 | 0x10000900 | TopCarSystemBar#0
0xb400007858c902e0: 1096.00 KiB | 1024 (1024) x  274 |    1 |        1 | 0x1a00 | FramebufferSurface
0xb400007858c90370: 1200.00 KiB | 2560 (2560) x  120 |    1 |        1 | 0x10000900 | TopCarSystemBar#0
0xb400007858c90490: 1096.00 KiB | 1024 (1024) x  274 |    1 |        1 | 0x1a00 | FramebufferSurface
0xb400007858c906d0: 14400.00 KiB | 2560 (2560) x 1440 |    1 |        1 | 0x10000900 | com.mega.carsettings/com.mega.carsettings.CarSettingActivity#0
0xb400007858c90910: 1560.00 KiB |  800 ( 832) x  480 |    1 |        1 | 0x1a00 | FramebufferSurface
0xb400007858c90d00: 14400.00 KiB | 2560 (2560) x 1440 |    1 |        1 | 0x1a00 | FramebufferSurface
0xb400007858c90d90: 15840.00 KiB | 2560 (2816) x 1440 |    1 |        1 | 0x933 | SurfaceView - HvacPanel#2
0xb400007858c91720: 1200.00 KiB | 2560 (2560) x  120 |    1 |        1 | 0x10000900 | TopCarSystemBar#0
0xb400007858c91a80: 15840.00 KiB | 2560 (2816) x 1440 |    1 |        1 | 0x933 | SurfaceView - com.mega.carsettings/com.mega.carsettings.CarSettingActivity#0
0xb400007858c920b0:    0.25 KiB |    1 (  64) x    1 |    1 |        1 | 0x10000900 | #1
0xb400007858c92530: 1280.00 KiB | 2560 (2560) x  128 |    1 |        1 | 0x10000900 | BottomCarSystemBar#0
0xb400007858c93610: 1096.00 KiB | 1024 (1024) x  274 |    1 |        1 | 0x10000900 | com.mega.redwoodhvac/com.mega.redwoodhvac.view.behind.BehindActivity2#0
0xb400007858c938e0: 14400.00 KiB | 2560 (2560) x 1440 |    1 |        1 | 0x10000900 | com.mega.carsettings/com.mega.carsettings.CarSettingActivity#0
0xb400007858c93a00: 15840.00 KiB | 2560 (2816) x 1440 |    1 |        1 | 0x933 | SurfaceView - HvacPanel#1
0xb400007858c94780: 1280.00 KiB | 2560 (2560) x  128 |    1 |        1 | 0x10000900 | BottomCarSystemBar#0
0xb400007858c94c00:  770.00 KiB |  435 ( 448) x  440 |    1 |        1 | 0x10000900 | #3
0xb400007858c94db0: 14400.00 KiB | 2560 (2560) x 1440 |    1 |        1 | 0x10000900 | com.mega.carsettings/com.mega.carsettings.CarSettingActivity#0
0xb400007858c94ff0: 1096.00 KiB | 1024 (1024) x  274 |    1 |        1 | 0x10000900 | com.mega.redwoodhvac/com.mega.redwoodhvac.view.behind.BehindActivity2#0
0xb400007858c957d0: 14400.00 KiB | 2560 (2560) x 1440 |    1 |        1 | 0x10000900 | HvacPanel#0
0xb400007858c95ce0: 1280.00 KiB | 2560 (2560) x  128 |    1 |        1 | 0x10000900 | BottomCarSystemBar#0
0xb400007858c95d70: 1096.00 KiB | 1024 (1024) x  274 |    1 |        1 | 0x10000900 | com.mega.redwoodhvac/com.mega.redwoodhvac.view.behind.BehindActivity2#0
0xb400007858c960d0: 14400.00 KiB | 2560 (2560) x 1440 |    1 |        1 | 0x10000900 | HvacPanel#0
0xb400007858c96160:    0.25 KiB |    1 (  64) x    1 |    1 |        1 | 0x10000900 | #2
Total allocated by GraphicBufferAllocator (estimate): 229048.00 KB
从上面日志看出：SurfaceView - HvacPanel 这个东西的id一直在增加，所以泄漏了；BehindActivity2 的id就没有增加，说明没泄漏。




adb shell am dumpheap 包名
然后把文件改成.hprof丢到AS里去看内存泄漏情况

adb shell dumpsys meminfo com.mega.carsettings  查看内存情况   主要看下 TOTAL PSS:
Applications Memory Usage (in Kilobytes):
Uptime: 75224 Realtime: 75224

** MEMINFO in pid 2450 [com.mega.carsettings] **
                   Pss  Private  Private     Swap      Rss     Heap     Heap     Heap
                 Total    Dirty    Clean    Dirty    Total     Size    Alloc     Free
                ------   ------   ------   ------   ------   ------   ------   ------
  Native Heap   122640   122608        0        0   125672   134584   122553     7315
  Dalvik Heap     9122     9060        0        0    13272    19116     9558     9558
 Dalvik Other     6480     4548        0        0     8908                           
        Stack     2396     2396        0        0     2404                           
       Ashmem        4        0        0        0       20                           
    Other dev      126        0      124        0      456                           
     .so mmap    60610    21280    29528        0   116116                           
    .jar mmap     1663        0       64        0    33460                           
    .apk mmap    25985      356    19744        0    61104                           
    .ttf mmap      103        0        0        0      440                           
    .dex mmap       93        4        0        0      388                           
    .oat mmap       27        0        0        0     2224                           
    .art mmap     7990     7784       12        0    20156                           
   Other mmap   283045   124852   156152        0   287856                           
      Unknown    52996    52992        0        0    53616                           
        TOTAL   573280   345880   205624        0   573280   153700   132111    16873
 
 App Summary
                       Pss(KB)                        Rss(KB)
                        ------                         ------
           Java Heap:    16856                          33428
         Native Heap:   122608                         125672
                Code:    71004                         217720
               Stack:     2396                           2404
            Graphics:        0                              0
       Private Other:   338640
              System:    21776
             Unknown:                                  346868
 
           TOTAL PSS:   573280            TOTAL RSS:   726092      TOTAL SWAP (KB):        0
 
 Objects
               Views:      402         ViewRootImpl:        1
         AppContexts:        9           Activities:        2
              Assets:        7        AssetManagers:        0
       Local Binders:      116        Proxy Binders:       79
       Parcel memory:       18         Parcel count:       75
    Death Recipients:       28      OpenSSL Sockets:        0
            WebViews:        0
 
 SQL
         MEMORY_USED:        0
  PAGECACHE_OVERFLOW:        0          MALLOC_SIZE:        0






MegaLinkManager找 罗红杰

如果底层信号有问题或者延迟，问下 CBS张超


高斯模糊弹框导致的surface耗尽：
http://jira.i-tetris.com/browse/RW-53301
http://jira.i-tetris.com/browse/RW-52092
解决方案： 弹框判断当前按是否是压测，是的话，不弹这个弹框。
日志中搜索 animation-leash 或者 Layer可以看到信息。



已修复，请使用1205版本验证。

ThreadedRenderer.setForceDark(boolean)' on a null object reference
和RW-36969重复，此单关闭。(日志不全，被关闭了)
ThreadedRenderer.setForceDark(boolean)' on a null object reference
和RW-42821重复，此单关闭。



Caused by: java.lang.NullPointerException: Attempt to invoke virtual method 'void android.view.ThreadedRenderer.draw(android.view.View, android.view.View$AttachInfo,
和RW-36917重复，此单关闭。

Caused by: java.lang.NullPointerException: Attempt to invoke interface method 'int android.view.ViewParent.getTextDirection()' on a null object reference
at android.view.View.resolveTextDirection(View.java:27336)
和RW-36945重复，此单关闭。

Caused by: java.lang.NullPointerException: Attempt to invoke virtual method 'void android.view.ThreadedRenderer.allocateBuffers()' on a null object reference
at android.view.ViewRootImpl.performTraversals(ViewRootImpl.java:2723)
和RW-36930重复，此单关闭。  
和RW-42201重复，此单关闭。

hreadedRenderer.setStopped
和RW-48598重复，此单关闭。

[ANR] com.mega.redwoodhvac 
和RW-43157重复，本单关闭。

[ANR] com.mega.carsettings osVersion
和RW-40588重复，本单关闭。RW-42616(已关闭)


[ANR] com.mega.chery.controller osVersion
和 RW-43565 重复，本单关闭。

id: 3663, tid: 5926, name: UnityMain >>> com.mega.redwoodhvac <<<
和RW-49998 重复，本单关闭。

修改动态氛围灯为流光，重启车机后选项变为关闭
内部：http://jira.i-tetris.com/browse/RW-52859
外部：http://52.80.87.177:8080/browse/RW-64316
需求里说，下电时，要把 动态氛围灯关闭。下次重新上电，会使用最后一次的动态氛围灯的状态，也就是关闭状态


关闭氛围灯，大屏重启后氛围灯开关保持关闭，但是车内氛围灯带是点亮状态
http://jira.i-tetris.com/browse/RW-33937

氛围灯中间颜色不能进行调节
http://jira.i-tetris.com/browse/RW-48092
从日志里看，动态氛围灯处于关闭状态。按照需求，就是不能调节中间颜色的。
ID14 是仪表台氛围灯，也叫动态氛围灯，id4和id9是门板上的氛围灯


氛围灯无法点击
http://jira.i-tetris.com/browse/RW-48843
logcat.log.016_2024_01_18_09_22_01.gz:01-18 09:21:12.274159 26919 26919 D AtmosphereFragment: [ (AtmosphereFragment.java:210)#resetAtmosphereLight ]resetAtmosphereLight 4
进入apc限制了
此时是不让用氛围灯的。
请先解除apc限制。


语音控制关闭氛围灯无效
内部：http://jira.i-tetris.com/browse/RW-48378
外部：http://52.80.87.177:8080/browse/RW-61149

此回调的线程和正常的 CheryMediaControl 线程不一样，应该是重启时，CheryMediaControl 销毁的时候，没有解注册LionMediaSysThirdCallback，导致重启之前的LionMediaSysThirdCallback对象一直存在。
解决方案：重启时解注册 LionMediaSysThirdCallback。
内部：http://jira.i-tetris.com/browse/RW-51278
外部：http://52.80.87.177:8080/browse/RW-63083


内存和cpu都不紧张，ui上未做耗时操作，但是input事件超时，需要到qnx日志查看肯恩的内存泄漏，比如此单
RW-38234
pmem table dump: total entries=2839, total size alloc'd=577413040(0x226a9fb0), time=10838080.00ms
RGS release: 0x74718000, GMU FW release: 0x30000012

index process name host pid total size(bytes) peak size(bytes)
0 kgsl 49204 14057472 14143488
3 secure memory 49204 8847360 8847360
5 com.mega.phev 70762821 6128099328 6187638784
6 ais_server 49203 790568 790568
7 ivi_compositor 1761387 43335760 43876432
8 ic_whud 1843317 75247696 75247696
9 ic_adas 1843316 178581584 178581584
10 avm_app 2203783 299118672 305446992
11 screen 49195 69714040 109391992
99 android.hardwar 49365053 790528 790528
101 surfaceflinger 49369156 6255030272 6305116160
241 droid.launcher3 69591321 125313024 188526592
242 om.mega.carplay 69595439 4972544 4980736
246 om.iflytek.xiri 69689651 11157504 11157504
248 icerelayservice 69689657 4980736 4980736
249 ega.redwoodhvac 69689661 95379456 109285376
250 ac.behindscreen 69689662 28033024 28033024
252 ndroid.systemui 69722435 35385344 38461440
259 hery.controller 70742343 14901248 15720448
com.mega.phev 内存泄露，请处理



车辆设置界面卡死，无法点击，但是其他应用可以正常操作
http://jira.i-tetris.com/browse/RW-36895


座椅 恢复功能的20S超时逻辑，飞书和周倪青确认，暂不实现  RW-26936

长按方控无法唤起全景影像   
RW-37410

空气净化模式（AQS）关闭时空调没有恢复到之前的状态 （记忆由vcc完成，非icc功能）
http://jira.i-tetris.com/browse/RW-33931
http://52.80.87.177:8080/browse/CRW-15297

主副驾的上下调节UI界面均不变化的问题，低配置车就是不会变化的。RW-37227

在选择无香氛的情况不会切换到有香氛的那个界面，这个切换逻辑是空调做，不是icc做 RW-37492

语音关闭空调，回复双区模式未开启：参考此单，需要讯飞处理。
http://52.80.87.177:8080/browse/CRW-17371

无ICC日志，仪表Someip数据，其他测试，第三方及TBOX USB下载LOG
http://jira.i-tetris.com/browse/RW-13020

中控电动侧门开启位置和实际门开状态不一致：
http://jira.i-tetris.com/browse/RW-37982
应用层使用信号：
// 车门状态
DOOR_FL(EntryLocks.ID_DOOR, FRONT_LEFT),
DOOR_FR(EntryLocks.ID_DOOR, FRONT_RIGHT),
DOOR_RL(EntryLocks.ID_DOOR, REAR_LEFT),
DOOR_RR(EntryLocks.ID_DOOR, REAR_RIGHT),
主驾车门信号检索：
someip.messageid ==0xA4008004
副驾车门信号检索：
someip.messageid ==0xA4018004





视屏中点击副驾车门，结果打开了主驾车门，应该打开副驾车门才对。
从pcap里看到，上报的确实是副驾驶车门开，没有上报主驾车门开。


进入应用界面后发现会闪屏，此时要如何定位是否是relaunch activity引起的闪屏呢
https://blog.csdn.net/wds1181977/article/details/45914489


内置功放配置字命令：
adb shell am start -n com.mega.engineeringmode/.function.offlineconfiguration.OfflineConfigurationActivity --ei eamp_value 0
外置功放配置字命令：
adb shell am start -n com.mega.engineeringmode/.function.offlineconfiguration.OfflineConfigurationActivity --ei eamp_value 1

e03配置字命令：
adb shell am start -n com.mega.engineeringmode/.function.offlineconfiguration.OfflineConfigurationActivity --ei car_mode 0
e0y配置字命令：
adb shell am start -n com.mega.engineeringmode/.function.offlineconfiguration.OfflineConfigurationActivity --ei car_mode 1
eh3配置字命令：
adb shell am start -n com.mega.engineeringmode/.function.offlineconfiguration.OfflineConfigurationActivity --ei car_mode 2
两个参数一起改：
adb shell am start -n com.mega.engineeringmode/.function.offlineconfiguration.OfflineConfigurationActivity --ei eamp_value 1 --ei car_mode 1
adb shell am start -n com.mega.engineeringmode/.function.offlineconfiguration.OfflineConfigurationActivity --ei eamp_value 1 --ei car_mode 1 --ei high_performance 0



有E2E保护的someip数据，看最后一位


android seekbar拖动的时候不发送信号：
app:updatesContinuously="false"



// 重启中
14048: 12-01 18:03:15.846838 0 0 I : Booting Linux on physical CPU 0x0000000000 [0x51df804e]

// 通知Launcher启动
45714: 12-01 18:03:30.624981 2063 2063 D CarControlModel: [ (CarControlModel.java:104)#notifyLauncherReady ]notifyLauncherReady ID_LAUNCHER_READ.



adb shell logcat | grep LogDataInterfaceManager
用我这个可以看ICC是否触发埋点
另外还有：
adb logcat | grep sendToDataPointForCp


此目录里可以找到每次编译的apk
https://jenkins.i-tetris.com/view/mfg/job/redwood_os_mfg/58/execution/node/15/ws/android/vendor/mega/prebuilts/release_apks/redwood/


【台架】播放名称过长音频时不滚动显示名称 RW-39896
此功能在主线分支或者1209分支都已经修复，由于无法向1021分支同步代码，请测试在主线或者1209上回归此问题。


http://jira.i-tetris.com/browse/SAM-10005/GC-3974
android.app.RemoteServiceException: Context.startForegroundService() did not then call Service.startForeground(): ServiceRecord

{ab7870f u0 com.mega.chery.iflytek/.service.AvmControllerService}
at android.app.ActivityThread$H.handleMessage(ActivityThread.java:2005)
at android.os.Handler.dispatchMessage(Handler.java:106)
at android.os.Looper.loop(Looper.java:223)
at android.app.ActivityThread.main(ActivityThread.java:7664)
at java.lang.reflect.Method.invoke(Native Method)
at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:596)
at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:947)


点击座椅恢复实际恢复成功中控显示恢复失败
http://jira.i-tetris.com/browse/RW-39469



打开关闭宝宝模式后，氛围灯状态与实车不一致
http://jira.i-tetris.com/browse/RW-39500
http://52.80.87.177:8080/browse/CRW-18800
原因：宝宝模式关闭时，先关闭了氛围灯，后调用重置氛围灯的亮度接口，导致氛围灯被拉起
解决方案：调整两个接口的调用顺序，先调用 重置氛围灯的亮度接口，然后调用氛围灯关闭接口
1220以后版本可以验证



后排屏黑屏有背光
http://jira.i-tetris.com/browse/RW-36139


车控大灯调节，关闭和位置信号，没有e2e保护，自动和近光灯有e2e保护，pcap信号看最后两位就行。


音乐律动正常开启，实际氛围灯不跟随音乐闪动
http://jira.i-tetris.com/browse/RW-40088

钥匙管理NFC卡界面没有删除选项
内部：http://jira.i-tetris.com/browse/RW-37922
外部：http://52.80.87.177:8080/browse/RW-38776

动态氛围灯流光状态，无极调色时也要给动态氛围灯传颜色值
RW-59217




https://docs.google.com/spreadsheets/d/1imBr07T03l1tuAwLM-yzVBk18d6mOP233QkcW41rGjQ/edit#gid=0
此表格非长期，待总体bug降下来后，就不用了
填完bug后，过一下，看看哪些bug是可以快速消掉的，争取填到当天的计划中。





2023.12.21
车辆设置模块责任人划分：
李宝： 常用 驾驶 车灯 辅助驾驶 unity
周学猛：整车设置 安全设置 环境舒适 抬头显示 车辆状态 
黄有厂：氛围灯，数字钥匙逻辑
车辆设置后面的task都交给合肥做，保军持续支持；有bug或者task过来，按照上述责任人 分配，如果某人名下jira太多，再考虑把单子分配给其他人。
这样做的目的是，一个人固定负责某个模块，代码更熟悉，效率更高。


帧动画对包体积和cpu的影响：
帧动画帧数越多，包体积越大，而且ui给过来的图，不能压缩，不然容易出现水波纹;
帧动画处理控件WindFrameView 的帧数默认一秒30帧，如果改成一秒20帧，cpu可以稍微下降（空调二排从81% 到 78%）
使用全屏的帧动画（2560*1440）cpu占用130%；使用尽可能小的像素（两份2560*1440 改成 1420 * 328  和 480 * 364 ），cpu从 130%降到81%



install apk报错：
adb: failed to install RedwoodCarSettings.apk: Failure [INSTALL_FAILED_TEST_ONLY: installPackageLI]
解决方法：adb install -t test.apk


grep -rn "abcd"  可以从当前目录中过滤出abcd字段。

查看某个app的version：
adb shell pm dump com.lion.media |grep -i "version"
adb shell pm dump com.holomatic.holoavm |grep -i "version"




黑夜模式下打开香氛界面，背景条纹抖动
RW-38438
白斌 之前和ui张志强 还有刘潇沟通过，需要定个方案：
使用黑夜模式的动效，但是切图太大，每张2.3M，80张就是184M，又不能压缩，压缩会造成水波纹。
希望白老师，推动一下奇瑞，这里应该如何处理。


转换显示模式，后排屏会跳转至音乐界面
RW-39454
客户不同意后排屏从空调界面跳到音乐界面，但是客户想通过加一个自动熄屏的策略来减低内存消耗;
还有一种方案：不要动效，使用静态图片



车机开机后自动弹出多媒体音量条
内部：http://jira.i-tetris.com/browse/RW-31869
外部：http://52.80.87.177:8080/browse/CRW-13850


ssh远程：
ssh matrix@10.57.1.168
密码：matrix

当adb链接多个设备是，adb shell要进入其中一个：
adb devices
List of devices attached
emulator-5554 device

$ adb -s emulator-5554 shell

远程拉文件
scp -r matrix@10.57.1.168:~/eric0115/tmp ./localdir
scp -r matrix@10.57.1.168:~/0118/perf_set18.data .

问题：后排黑屏，日志找到：
ActivityManager: Process com.mega.redwoodhvac.behindscreen (pid 5103) has died: vis+2 TOP 
找到：
12-20 22:06:35.082865   266   266 I lowmemorykiller: Kill 'com.mega.redwoodhvac.behindscreen' (5103), uid 1000, oom_adj 102 to free 101480kB
原因：被系统lowmemerykill 杀了，系统低内存的时候会杀一部分进程回收内存


hud模式设置topic：HUD/HUDDisplayMode

后尾门高度显示为0%
内部：http://jira.i-tetris.com/browse/RW-40838
外部：http://52.80.87.177:8080/browse/CRW-19595


12-25 13:30:44.657235   595   671 E system_monitor:   Mem: 10547460K total,  6900448K used,  3647012K free,  37576704 buffers
12-25 13:30:44.657243   595   671 E system_monitor:  Swap:  4194300K total,   890896K used,  3303404K free,  1163056K cached
12-25 13:30:44.657250   595   671 E system_monitor: 800%cpu 168%user  71%nice 271%sys 275%idle   0%iow   7%irq   7%sirq   0%host
12-25 13:30:44.657256   595   671 E system_monitor:    PID USER         PR  NI VIRT  RES  SHR S[%CPU] %MEM     TIME+ ARGS
12-25 13:30:44.657268   595   671 E system_monitor:   1030 system       18  -2  18G 312M 148M S 96.4   3.0 4918:12.17 system_server
12-25 13:30:44.657274   595   671 E system_monitor:    262 logd         30  10  12G  63M 2.5M S 67.8   0.6 2537:43.46 logd
12-25 13:30:44.657280   595   671 E system_monitor:    498 system       -3   0  12G 913M  65M S 53.5   8.8 3197:57.19 surfaceflinger



当前编译的是debug版本
Release版本编译不通过Module was compiled with an incompatible version of Kotlin. The binary version of its metadata is 1.8.0, expected version is 1.6.0
请修改代码，使Release版本可以编译通过
编译命令如：
./gradlew Amberex:AmberexAccount:assembleRelease -Dlint.baselines.continue=true
huangyouchang@huangyouchang:~/workspace/redwood$ ./gradlew redwood:RedwoodCarSettings:assembleRelease -Dlint.baselines.continue=true
                                                                   
./gradlew assembleRelease -Dlint.baselines.continue=true



通过 TextToSpeechPlayer startSpeaker 过滤语音文案


切换黑天白夜：
adb shell
su 0 cmd uimode night yes/no


座椅加热按钮一直闪烁
单号1：
（只有内部）http://jira.i-tetris.com/browse/RW-35346
单号2：
内部：http://jira.i-tetris.com/browse/RW-40177
外部：http://52.80.87.177:8080/browse/CRW-19169


【后排屏】在线配置FLDRM=1&车型=01，后排屏没有后排控制车门功能
http://jira.i-tetris.com/browse/RW-41325
oy无此功能

日志通过 CherySystemUIApplication 过滤出系统版本号


遇到这种日志：
	Line  44324: 11-13 15:16:21.329886 31834 31834 F DEBUG   : backtrace:
	Line  44329: 11-13 15:16:21.329984 31834 31834 F DEBUG   :       #00 pc 000000000025a56c  /apex/com.android.art/lib64/libart.so (void art::mirror::Object::VisitReferences<true, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)1, art::gc::collector::ConcurrentCopying::ComputeLiveBytesAndMarkRefFieldsVisitor<true>, art::gc::collector::ConcurrentCopying::ComputeLiveBytesAndMarkRefFieldsVisitor<true> >(art::gc::collector::ConcurrentCopying::ComputeLiveBytesAndMarkRefFieldsVisitor<true> const&, art::gc::collector::ConcurrentCopying::ComputeLiveBytesAndMarkRefFieldsVisitor<true> const&)+204) (BuildId: a950457c95408f4686a9668f055842e0)
	Line  44330: 11-13 15:16:21.330005 31834 31834 F DEBUG   :       #01 pc 000000000025a3d4  /apex/com.android.art/lib64/libart.so (art::gc::collector::ConcurrentCopying::AddLiveBytesAndScanRef(art::mirror::Object*)+224) (BuildId: a950457c95408f4686a9668f055842e0)
	Line  44331: 11-13 15:16:21.330019 31834 31834 F DEBUG   :       #02 pc 000000000025bec0  /apex/com.android.art/lib64/libart.so (art::gc::collector::ConcurrentCopying::ProcessMarkStackForMarkingAndComputeLiveBytes()+908) (BuildId: a950457c95408f4686a9668f055842e0)
	Line  44332: 11-13 15:16:21.330044 31834 31834 F DEBUG   :       #03 pc 00000000002540f4  /apex/com.android.art/lib64/libart.so (art::gc::collector::ConcurrentCopying::MarkingPhase()+1204) (BuildId: a950457c95408f4686a9668f055842e0)
	Line  44333: 11-13 15:16:21.330057 31834 31834 F DEBUG   :       #04 pc 00000000002532d8  /apex/com.android.art/lib64/libart.so (art::gc::collector::ConcurrentCopying::RunPhases()+240) (BuildId: a950457c95408f4686a9668f055842e0)


通过检索 DEBUG： 可以找到具体的应用
e  44114: 11-13 15:16:21.226246 31834 31834 F DEBUG   : Build fingerprint: 'Mega/redwood/redwood:11/RQ3A.211001.001/1.2.96.0-20231108:user/release-keys'
	Line  44115: 11-13 15:16:21.226287 31834 31834 F DEBUG   : Revision: '0'
	Line  44116: 11-13 15:16:21.226320 31834 31834 F DEBUG   : ABI: 'arm64'
	Line  44117: 11-13 15:16:21.226827 31834 31834 F DEBUG   : Timestamp: 2023-11-13 15:16:21+0800
	Line  44118: 11-13 15:16:21.226886 31834 31834 F DEBUG   : pid: 12313, tid: 12348, name: HeapTaskDaemon  >>> com.mega.redwoodhvac <<<
	Line  44122: 11-13 15:16:21.226921 31834 31834 F DEBUG   : uid: 1000
	Line  44123: 11-13 15:16:21.226961 31834 31834 F DEBUG   : signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0x44
	Line  44124: 11-13 15:16:21.227005 31834 31834 F DEBUG   : Cause: null pointer dereference
	Line  44125: 11-13 15:16:21.227058 31834 31834 F DEBUG   :     x0  00000000763845c0  x1  0000007806c17a60  x2  0000007806c17a60  x3  0000000000000000
	Line  44126: 11-13 15:16:21.227100 31834 31834 F DEBUG   :     x4  0000000000000010  x5  b4000079191491f0  x6  b4000079d9150820  x7  b4000079d91523f0
	Line  44127: 11-13 15:16:21.227139 31834 31834 F DEBUG   :     x8  0000000000000000  x9  0000000000000001  x10 00000000d6180000  x11 0000000010000000
	Line  44128: 11-13 15:16:21.227183 31834 31834 F DEBUG   :     x12 0000000000000001  x13 000000006fed80a0  x14 0015010d69bb3800  x15 0000000034155555
	Line  44129: 11-13 15:16:21.227288 31834 31834 F DEBUG   :     x16 0000007b5afb97d0  x17 0000007b59d52ad4  x18 0000007805cb2000  x19 0000007806c17a60
	Line  44130: 11-13 15:16:21.227332 31834 31834 F DEBUG   :     x20 00000000763845c0  x21 0000007806c17a60  x22 0000000000000000  x23 b400007989125d08
	Line  44134: 11-13 15:16:21.227372 31834 31834 F DEBUG   :     x24 b40000794914d3b0  x25 0000007806c19000  x26 0000007806c19000  x27 b4000079891259c0
	Line  44135: 11-13 15:16:21.227413 31834 31834 F DEBUG   :     x28 0000007868ff4000  x29 0000007806c17a00
	Line  44136: 11-13 15:16:21.227450 31834 31834 F DEBUG   :     lr  0000007868ba23d8  sp  0000007806c179e0  pc  0000007868ba256c  pst 0000000020000000
	Line  44251: 11-13 15:16:21.275396     0     0 E init    : cannot execv('/system/chery_idps/bin/idps_nodeManager'). See the 'Debugging init' section of init's README.md for tips: Permission denied
	Line  44324: 11-13 15:16:21.329886 31834 31834 F DEBUG   : backtrace:
	Line  44329: 11-13 15:16:21.329984 31834 31834 F DEBUG   :       #00 pc 000000000025a56c  /apex/com.android.art/lib64/libart.so (void art::mirror::Object::VisitReferences<true, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)1, art::gc::collector::ConcurrentCopying::ComputeLiveBytesAndMarkRefFieldsVisitor<true>, art::gc::collector::ConcurrentCopying::ComputeLiveBytesAndMarkRefFieldsVisitor<true> >(art::gc::collector::ConcurrentCopying::ComputeLiveBytesAndMarkRefFieldsVisitor<true> const&, art::gc::collector::ConcurrentCopying::ComputeLiveBytesAndMarkRefFieldsVisitor<true> const&)+204) (BuildId: a950457c95408f4686a9668f055842e0)
	Line  44330: 11-13 15:16:21.330005 31834 31834 F DEBUG   :       #01 pc 000000000025a3d4  /apex/com.android.art/lib64/libart.so (art::gc::collector::ConcurrentCopying::AddLiveBytesAndScanRef(art::mirror::Object*)+224) (BuildId: a950457c95408f4686a9668f055842e0)
	Line  44331: 11-13 15:16:21.330019 31834 31834 F DEBUG   :       #02 pc 000000000025bec0  /apex/com.android.art/lib64/libart.so (art::gc::collector::ConcurrentCopying::ProcessMarkStackForMarkingAndComputeLiveBytes()+908) (BuildId: a950457c95408f4686a9668f055842e0)
	Line  44332: 11-13 15:16:21.330044 31834 31834 F DEBUG   :       #03 pc 00000000002540f4  /apex/com.android.art/lib64/libart.so (art::gc::collector::ConcurrentCopying::MarkingPhase()+1204) (BuildId: a950457c95408f4686a9668f055842e0)
	Line  44333: 11-13 15:16:21.330057 31834 31834 F DEBUG   :       #04 pc 00000000002532d8  /apex/com.android.art/lib64/libart.so (art::gc::collector::ConcurrentCopying::RunPhases()+240) (BuildId: a950457c95408f4686a9668f055842e0)
	
	

测试提的tombstones日志在 device_crash/data/ 
tombstones的单子，要下载 tombstones 日志


日志里有：Cause:null pointer dereference
http://jira.i-tetris.com/browse/RW-39749
http://jira.i-tetris.com/browse/RW-33617
参考张忠毅的回复，可能是某个应用内存泄露太多导致。

qnx 内存不够的时候会dump：在pmemtbl_control.txt文件中
pmem table dump: total entries=2653, total size alloc'd=572522416(0x221fffb0), time=10247925.00ms
RGS release: 0x74718000, GMU FW release: 0x30000012

index process name host pid total size(bytes) peak size(bytes)
0 kgsl 49204 14073856 14094336
3 secure memory 49204 8847360 8847360
5 ais_server 49203 790568 790568
7 ivi_compositor 1761387 43135056 43192400
8 screen 49195 69714040 108605560
13 ic_whud 1847413 74272848 74895440
14 ic_adas 1843316 174063696 174325840
15 avm_app 2220175 299118672 305446992
45 android.hardwar 23740477 790528 790528
47 surfaceflinger 23744578 2362380288 6352863232
49 droid.launcher3 23793746 129318912 208052224
51 ndroid.systemui 23793762 43343872 51372032
55 hery.controller 23830653 14667776 15720448
57 icerelayservice 23834817 5111808 5111808
59 om.iflytek.xiri 24010960 11288576 11288576
110 ega.redwoodhvac 58577147 96804864 110931968
122 om.mega.carplay 70017107 5111808 5111808

133 com.mega.phev 70689088 3779031040 3828666368

134 fly.sceneengine 72413507 5111808 5111808
136 ega.carsettings 76157072 57925632 74145792
137 Binder:1228_3 76218701 4841472 4841472
可以看到phev KGSL消耗了3.8G，有问题。



【后排屏】满足后排控制车门输入信号
RW-41578
后左车门开关信号：A4028004
后右车门开关信号：A4038004
下面这个信号应该是不用，如有疑问，可以咨询下系统。
1.发送BCM_DoorCtrl_RL_Legacy（0xC83B）notifyMotionDirection.DoorMotionDirection=0x1
2.1.发送BCM_DoorCtrl_RR_Legacy（0xC83C）notifyMotionDirection.DoorMotionDirection=0x1


RW-41423
国际方控右键长按无法唤出语音
日志里看，方向盘右键已经触发启动语音。
但是国际的讯飞语音和国内的不同。
目前系统这边不知道国际如何启动语音，请讯飞提供。


0x0:No_Action
0x1:Touch_Action
点击类型的按键，点一次发一帧Touch_Action+一帧No_Action，不论当前开关是开还是关。
这种信号在VehSetting里有配置TOUCH_ACTION，这样每次发出去的信号都是 1


充电口盖无法打开 对手件问题
内部：http://jira.i-tetris.com/browse/RW-37931
外部：http://52.80.87.177:8080/browse/CRW-17877


点击抬头显示自动按钮后更换挡位调节失败后按钮无法点击
RW-57735
切换档位后，会触发自动按钮的判断条件：
档位不能是R档，车速不能大于10,电源模式是D1,DMS摄像头处于开。
以上四个条件都满足才能点击自动按钮。
当前日志无法判断这四个条件是否满足。请重新提供android日志。




可见即可说，没有反应，可以通过日志检索：AppStatusManager 查看viewCmd 里有没有 view的文本
2024-01-03 15:40:43.676  1805-2501  AppStatusManager        com...ytek.cutefly.speechclient.hmi  D  last_status is :{"viewCmd::default":{"data":{"hotInfo":{"viewCmd":"主界面|星途|你好星途|智能模式|扫风|assistNameacwinddriveropen|切至后排|assistNameacpanelrearrow|扫风|assistNameacwindcopilotopen|吹窗|吹脚|吹面|AUTO|自动模式|快速取暖|内外循环|空气净化|前除霜|后除霜|方向盘加热|assistNameacpanelfrontrowventisp|香氛|SYNC|温区同步|OFF|OFF|173****9964|Keyboard|0340|PM|成长进度|设置"}},"activeStatus":"bg","sceneStatus":"default"},"cmd::default":{"data":{},"activeStatus":"fg","sceneStatus":"default"}}

比如喊氛围灯，
讯飞语音会打印 ActionPresenter: performAction() action:Action [type=1004, keyword=氛围灯 
这样的日志。如果没有，说明讯飞语音没过来。



通过adb命令开启GPU过渡绘制调试

当然，如果每次都进入系统设置嫌麻烦，可以使用adb命令进行开启和关闭：
开启『调试 GPU 过度绘制』：
adb shell setprop debug.hwui.overdraw show
关闭『调试 GPU 过度绘制』：
adb shell setprop debug.hwui.overdraw false
执行命令之后可能需要重新启动你当前开发的应用。
原色：没有过度绘制
蓝色：1 次过度绘制
绿色：2 次过度绘制
粉色：3 次过度绘制
红色：4 次及以上过度绘制


someip报文里的payload的数据，就是struct，不要看 里面的length。


开启音乐律动，AmbLigFlngModSel 这个值肯定是发3 

查看内核版本：
sudo apt list|grep linux-generic*

linux-generic-hwe-18.04-edge/focal-updates,focal-security 5.4.0.169.167 amd64
linux-generic-hwe-18.04/focal-updates,focal-security 5.4.0.169.167 amd64
linux-generic-hwe-20.04-edge/focal-updates,focal-security 5.15.0.91.101~20.04.48 amd64
linux-generic-hwe-20.04/focal-updates,focal-security 5.15.0.91.101~20.04.48 amd64 [可从该版本升级：5.8.0.43.49~20.04.29]
linux-generic/focal-updates,focal-security 5.4.0.169.167 amd64

然后执行 sudo apt-get install linux-generic-hwe-20.04 可以更新内核



ubuntu 在文件 > 其他位置 右下角访问 地址：smb://10.57.50.238/multi_pipeline_demo/f5a0426885d3468382f58e2124bd5fb9/0/1/test_HUIFANGsomeipSUIJIBAOWEN_1689846888176652290_1689846888176652290/6/device_crash
报错：挂在windows共享失败
解决：
sudo apt install gvfs-backends
然后在连接 smb://10.57.50.238/
需要密码，选择已注册用户，用户名和密码都写 share。
如果不小心写错了用户名或者密码，重启电脑重新连接配置。
然后可以把文件拷贝到自己电脑


应用被杀死，参考http://52.80.87.177:8080/browse/CRW-19990 的分析思路。

副驾安全气囊开关回弹
http://jira.i-tetris.com/browse/RW-38050
http://52.80.87.177:8080/browse/CRW-17960

车机手机遗忘不提醒
内部：http://jira.i-tetris.com/browse/RW-37470
外部：http://52.80.87.177:8080/browse/CRW-17571
对手件没有上报信号

【实车】车窗控制偶发回弹
内部：http://jira.i-tetris.com/browse/RW-30697
外部：http://52.80.87.177:8080/browse/RW-37205
vcc处理的问题


http://jira.i-tetris.com/browse/RW-56396
【E0Y】【生产车】【车辆设置】开的钥匙都不同步到大屏，即使显示了，样式也有问题

驾座椅调节界面没有当前位置的那个小图标（无进度状态显示）
http://jira.i-tetris.com/browse/RW-57859

[SWP4][系统设置]显示模式设置默认改为深色模式
http://jira.i-tetris.com/browse/RW-57659
http://jira.i-tetris.com/browse/RW-57757

语音控制主驾座椅加热1档，中控屏主驾座椅加热界面显示识别成功后从1档自动跳至2档
http://jira.i-tetris.com/browse/RW-38082
语音执行：座椅加热1档，ICC信号发送正常，对手件回复正常；
语音执行：座椅加热2档，ICC信号发送正常，对手件先回复2，后回复1，有问题，需要对手件排查。
另外，icc每帧有效值后面跟了一帧无效值00，为啥对手件在还没有接收到00无效值的时候，就回复了呢？


语音切换中英文模式中控出现1-3秒黑屏
http://jira.i-tetris.com/browse/RW-41629

已经开启语音的情况下，不再发送start
http://jira.i-tetris.com/browse/RW-36567


电动副仪表板点击后，不执行动作
http://jira.i-tetris.com/browse/RW-39166
ICC发送和接收到都是正常的，表明ICC信号下发和接收都ok。至于仪表板为啥没有移动，请对手件排查。

点击电动副仪表板向前，副仪表板向前一段后又回退
http://jira.i-tetris.com/browse/RW-38830
从pcap日志上看，点击向上按钮，信号正常的发送和接收了。
至于为啥副仪表板行为异常，需要对手件看下。

开启动态氛围灯，实车有动效，但UI显示无动效
内部：http://jira.i-tetris.com/browse/RW-32402
外部：http://52.80.87.177:8080/browse/RW-37663
实车颜色变化很多，如果ui上跟随实车变化的话，需要很多帧动画去实现。
第一消耗cpu和内存，第二很难做到动画和实车保持一致.
故 此功能不做实现。

上电后，走完迎宾流程，在6秒左右，会发消息  RESTORE_SAVED_LIGHT_STATUS:
                //恢复氛围灯之前的状态
                initAtmosphereLight();
关闭电源后，commonservice会调用会根据电源信号为0，走设防熄灭氛围灯sendAmbArming
本问题出现原因 ：下电设防后（会关闭氛围灯），然后氛围灯迎宾流程走完后，会走恢复下电前氛围灯状态，如果下电前氛围灯是开启的，会开启氛围灯。
解决方案：氛围灯迎宾流程走完后，判断当前电源状态，如果已经下电，则不在走恢复氛围灯逻辑。
       
       
实车颜色变化很多，如果ui上跟随实车变化的话，需要很多帧动画去实现。
第一消耗cpu和内存，第二很难做到动画和实车保持一致.
故 此功能暂不做实现。
内部：http://jira.i-tetris.com/browse/RW-32402
外部：http://52.80.87.177:8080/browse/RW-37663 

【原因】在氛围灯界面，说打开氛围灯，结果触发了左边菜单栏的可见即可说，没有走语义。
【解决】屏蔽菜单栏的氛围灯的可见即可说
【验证】在sop分支20240122版本验证
内部：http://jira.i-tetris.com/browse/RW-48378
外部：http://52.80.87.177:8080/browse/RW-61149

语音控制关闭氛围灯无效
为啥说走到了可见即可说，但是实际上并没有走 switch的点击事件
内部：http://jira.i-tetris.com/browse/RW-48378
外部：http://52.80.87.177:8080/browse/RW-61149


氛围灯设置为流光时氛围灯无动态效果,还是静态：
内部：http://jira.i-tetris.com/browse/RW-59361
外部：http://52.80.87.177:8080/browse/RW-68031
从pcap报文看，ICC已经外发了流光的值：16
实车氛围灯为什么没有表现出流光的状态，需求氛围灯看下。


拨杆灯光设置无法触发灯光弹框
http://jira.i-tetris.com/browse/RW-59319
根据需求，开启闪光灯或者开启远光灯，才会触发这个弹框


刷卡上电后：
偶现动态氛围灯开关关闭状态，实际开启
内部：http://jira.i-tetris.com/browse/RW-47792
外部：http://52.80.87.177:8080/browse/RW-60450



     
0y双色氛围灯：1 4 6 9 10     和  3  7 8  12 13 是两种颜色        1 4 6 9 10（上光源） 3  7 8  12 13(下光源)


车机上电，动态氛围灯流程：
开始走迎宾功能：
WELCOME_LIGHT_STEP_1 标志："AmbLigFlngModSel":6
WELCOME_LIGHT_STEP_2 标志 只有 AmbLig14Authn值为1，其他全是0
WELCOME_LIGHT_STEP_3 标志  4 6 7 9 12  14 id为1，亮度100，颜色36
WELCOME_LIGHT_STEP_4 标志  4 6 7 9 12  14 id为1，亮度0，颜色36    
然后恢复氛围灯之前的状态
RESTORE_SAVED_LIGHT_STATUS  


车辆设置-氛围灯-动态氛围灯任意选择效果，重启后不记忆选择  ，动态氛围灯模式处于关闭状态
http://jira.i-tetris.com/browse/RW-56509
从需求上看，挡位从P档变为非P档时，动态氛围灯需要切换到关闭。
重新上电，信号监听档位，就是有个非P档的信号跳变，需要将动态氛围灯切换到关闭状态。
此处是需求的正常实现，非问题。
可以试试，在P档时，切换到呼吸，然后重启查看，肯定还是在呼吸状态的。



ANR的bug单子分析：
ANR报告：http://xmmp-wh.i-tetris.com/#/task/taskList?projectId=1685427863&taskId=16564&type=0&page=detail&jobGuid=f5a0426885d3468382f58e2124bd5fb9&taskTab=anr&version=V1.2.127.0-20231206033617&package=com.mega.redwoodhvac.behindscreen
单子里会贴出这种连接，点击进去看看系统怎么分析的，一般可以看到。
如果指向具体的方法，可以尝试修改。
如果执行android源码，需要从android日志里找到 am_anr 的地方，根据时间（5000ms 或者 10000ms等），往前寻找，看看用户做了什么操作。

12-11 17:35:21.942496 12783 24062 I am_anr  : [0,19397,com.mega.redwoodhvac.behindscreen,819478031,Input dispatching timed out (b64213 com.mega.redwoodhvac/com.mega.redwoodhvac.view.behind.BehindActivity2 (server) is not responding. Waited 5000ms for FocusEvent(hasFocus=true))]
上面日志可以看到，是用户做了点击操作（Input dispatching timed out）

如果还是没有头绪，可以通过 system_monitor 过滤日志，看看系统的RAM 和CPU 是否紧张。


插入u盘，进入车辆设置异常卡滞后闪退
http://jira.i-tetris.com/browse/RW-43054

氛围灯自动关闭车头、车门灯光，点击切换氛围灯、关闭/打开氛围灯恢复正常【偶现】
http://jira.i-tetris.com/browse/RW-43098
首次上电开启双色氛围灯，仪表台灯光不亮，水杯盒灯光亮，切换双色氛围灯模式，灯光正常
http://jira.i-tetris.com/browse/RW-42983


android:importantForAccessibility="noHideDescendants"

给外部提供获取车型的代码：
 int value = Settings.System.getInt(getContentResolver(),
                    "id_config_model_code", 0);
value值含义：
EO3 = 0;
EOY = 1;
EH3 = 2;





1. //这个是开门的开度值，不能作为车门是否打开的判断
ID_DOOR_SET_POSITION_FLL(Signal.ID_DOOR_CURRENT_POSITION, FRONT_LEFT）
ID_DOOR_SET_POSITION_FR(Signal.ID_DOOR_CURRENT_POSITION, FRONT_RIGHT）
ID_DOOR_SET_POSITION_RL
ID_DOOR_SET_POSITION_RR

2.下面这个是用来判断车门运动方向也不能用来判断是否打开关闭：（1 打开方向 2关闭方向）
//电动门开/关按钮状态显示（这个只是用来显示状态）
    ID_DOOR_MOTION_DIRECTION_FL(Signal.ID_DOOR_MOTION_DIRECTION, FRONT_LEFT）
     ID_DOOR_MOTION_DIRECTION_FR(Signal.ID_DOOR_MOTION_DIRECTION, FRONT_RIGHT）
    ID_DOOR_MOTION_DIRECTION_FR(Signal.ID_DOOR_MOTION_DIRECTION, FRONT_RIGHT）
    ID_DOOR_MOTION_DIRECTION_RL(Signal.ID_DOOR_MOTION_DIRECTION, REAR_LEFT）
    （BCM_DoorCtrl_RL_Legacy（0xC83B）notifyMotionDirection.DoorMotionDirection=0x2
BCM_DoorCtrl_RR_Legacy（0xC83C）notifyMotionDirection.DoorMotionDirection=0x2）


3.还有一个门锁信号，没找到文档来源：（个人感觉，判断车门有没有锁上，用这个信号是可以的。因为这个是锁的信号）
A4008004
A4018004
A4028004
A4038004
即
 // 车门锁状态
    DOOR_FL(EntryLocks.ID_DOOR, FRONT_LEFT),

    DOOR_FR(EntryLocks.ID_DOOR, FRONT_RIGHT),

    DOOR_RL(EntryLocks.ID_DOOR, REAR_LEFT),

    DOOR_RR(EntryLocks.ID_DOOR, REAR_RIGHT),
    
    
0128 未显示HUD高度自动开关  RW-57400
经过和陶洪杰金龙 电话沟通，0223分支也就是e03 ota分支，保留高度自动调节按钮；0128 也就是e0y的 ota分支，隐藏 高度自动调节按钮。

系统setting属性写入，立刻断电，会出现写入失败的情况。
据说可以通过   Runtime.getRuntime().exec("sync");，强制写入，但是不知道会引起什么未知问题
实车不存在立刻断电的情况，建议不修改。


PHEV拖车模式开关按钮回弹 RW-57563




MAT分析内存工具：
https://www.jianshu.com/p/4321d4780629

工具见桌面文件夹MemoryAnalyzer
加压后点击 MemoryAnalyzer
然后进入本地文件 opt/sdk/platform-tools/ 
先dump内存文件：adb shell am dumpheap com.demo.micolauncher /data/local/tmp/test.hprof，将test.hprof下载到本地
执行：hprof-conv test.hprof converted-test.hprof
使用MemoryAnalyzer 打开 converted-test.hprof


和指令 simpleperf record -g -o /data/local/tmp/perf_vehicle.data --duration 30 -p pid 一起使用，分析cpu


https://mp.weixin.qq.com/s?__biz=MzA5MzI3NjE2MA==&mid=2650263744&idx=1&sn=b67717ba614ebcb64aeaa05a23aa401a&chksm=886321afbf14a8b9ab38b86f913cb975bc0eb609e09be065802d024521b142a97bc71762b67b&scene=27

https://www.jianshu.com/p/f693f9b8c032

Allocations: 此类创建的实例对象数量
Native Size: 此类总共使用的原生内存总量（只有android7.0+设备才能看到）（单位字节）
Shallow Size: 此类使用的java内存总量（单位字节）
Retained Size: 此类实例对象仍存活而保留的内存总大小（单位字节）

去掉按键音：
android:soundEffectsEnabled="false"


http://52.80.87.177:8080/browse/RW-61980
数字钥匙点击解冻，云端冻结，icc再点击解冻，由于icc连续两次点击同样的卡片的冻结，VCC处理的逻辑认为短时间内相同信号会被抛弃，不进行处理。
如果是在ICC点击解冻，icc点击冻结，ICC点击解冻，是ok的，因为每次信号不一样，vcc会做处理。

飞书 OTA1联调 群：开启宝宝模式，宝宝模式设置的亮度和氛围灯亮度不一样，但是开启宝宝模式后，亮度没有变化
排查结论：
6-2之前那台车之前就是单色氛围灯，所以开宝宝模式亮度都可以调节
8-4这台是因为开的双色氛围灯 所以开宝宝模式只调节了门板的氛围灯亮度
所以非问题，和用户操作的场景有关。


 //RW-50352 RW-50957  删除delete操作，防止unity创建文件导致死锁导致anr
//        FileUtil.deleteFolder(Constant.FILE_PATH_UNITY);
        //不删除文件，会导致偶现车辆设置启动后有白色弹框，点击后车辆设置被杀;
        // 这里设置一个系统属性，fwk在启动后检查这个属性，
        // 为true，就是给文件Constant.FILE_PATH_UNITY 777的权限（所有用户）
        
车辆设置性能优化task  http://jira.i-tetris.com/browse/RW-41366


 Unable to get provider com.mega.carsettings.provider.SequoiaBrightnessSliceProvider: java.lang.SecurityException: Failed to find PID 2405
 http://jira.i-tetris.com/browse/RW-52996
参考：https://blog.csdn.net/lanmengfenghe/article/details/105162939


[台架]压测，发送Enh_SeatSW_FL.notifySeatNeedMemory=1,没有显示主驾座椅调节的弹框
http://jira.i-tetris.com/browse/RW-57915  
当发1,此时车辆设置 处于 方向盘电动调节弹框、后视镜电动调节弹框、座椅调节界面 这三个页面其中之一，则不会弹出主驾座椅记忆的弹框。
自动测试脚本会后续会再发一次1,但是Carservice的这个信号，必须是跳变后才会上报给应用层，导致后续的1无法传递给应用层，所以车辆设置后续也无法弹出主驾座椅记忆的弹框。



在桌面语音关闭氛围灯，在进入车辆设置APP氛围灯页面实车氛围灯会自动在开启，页面开关为关闭状态(之前开启了音乐律动)
RW-57752
        
无极调色氛围的后实车氛围灯颜色与中控氛围的内不一致
http://jira.i-tetris.com/browse/RW-58769   
动态氛围灯开启状态，无极调色不作用于动态氛围灯。
此处是正常需求实现，非问题。
可以尝试，把动态氛围灯关闭后，再拖动 无极调色。

全词匹配处理，前后加&符号,比如氛围灯的处理：
内部：http://jira.i-tetris.com/browse/RW-61440
外部：http://52.80.87.177:8080/browse/RW-69196
文本用：<string name="menu_atmosphere">氛围灯</string>
可见即可说用：  <string name="menu_atmosphere_content_description">&amp;氛围灯&amp;</string>
但是上面这个方案，实时下来，不行，已转语音组处理。

调节氛围灯亮度高低无任何反应
内部：http://jira.i-tetris.com/browse/RW-59253
外部：http://52.80.87.177:8080/browse/RW-67970
当前处于音乐律动模式。按照需求，音乐律动模式下，不能调整亮度



e03的动态氛围灯只有关闭和律动选项，按照需求是 关闭/静态/呼吸/流光模式。原因：选中了音乐律动。
内部：http://jira.i-tetris.com/browse/RW-59901
外部：http://52.80.87.177:8080/browse/RW-68313

e03氛围灯配置：0101
e0y氛围灯配置：0011


氛围灯设置信号id： 0x670000b7



和廖丽芬、周倪青确认：
国际联网的手套箱功能和国内策略一样；
国际非联网的手套箱，不需要密码，也不用在 整车设置里展示 “电动手套箱密码” 这个开关；点击常用界面的手套箱按钮，直接打开手套箱。
RW-41740
国际是否联网版本，根据配置字：Lion 人工智能系统 配置字值是否为1   LION_INTELLIGENT_SYSTEM



内部：http://jira.i-tetris.com/browse/RW-52433
外部：http://52.80.87.177:8080/browse/RW-63765
信号上报1,ICC显示这个弹框。信号上报0，ICC把这个弹框消失。
但是在7:59:02秒 上报的信号里，先上报1,在0.001秒后，上报0。由于间隔时间太短，ICC尚未完全显示这个弹框，无法处理关闭弹框的逻辑。

请对手件排查，为什么这么短的时间内，分别上报了1和0. 
正常情况下，上报1后，要隔一段时间才会上报0.
(不排除ICC接到1后，信号阻塞了，导致和0一起上报给了应用层)

遇到弹框文案不随着语言切换而变化的，可能是因为布局文件里的string，layout加载后有缓存。可以在代码里动态 settext 解决

高配地图的uuid读的someip，中配是写入的
中配写入uuid：
写入uuid: 0123456789012345678
msg_center_test -t uartrpc_svc/fact_test/req  '~!b:0x0c0x1e0x010xa00xc40x0f0x140x580x300x310x320x330x340x350x360x370x380x390x300x310x320x330x340x350x360x370x38'

高配中配读的是 自动驾驶控制中心  这个配置字
0是低配，1中中配，2是高配


国际的版本，讯飞语音不支持播放中文。
请在外文模式下测试。
请测试国际版本的同学，提单的时候，务必是在外语的模式下，测出来的bug才能提。在中文模式下的bug，不做数。


ICC接受信号：
0x64228019
根据此信号，ICC 弹出座椅记忆的弹框和消失 座椅记忆的弹框

ICC外发主驾记忆：
0xA9868001

对手件给ICC反馈记忆状态：
0x64228018


冷启动进入车辆设置常用界面，等一会，车模会闪一下，原因：雄狮音乐会预加载，启动了activity，导致车模走了onpause，又onresume


台架str状态进入：红线：IGN和ACC（线是黑色的，线头是红色的，接在正极），两个线同时拔掉，过一会电流会掉到0.3左右，会进入str，收到SUSPEND_ENTER；重新接上后，会SUSPEND_EXIT，在 ON
mCarPowerManager = (CarPowerManager) car.getCarManager(Car.POWER_SERVICE);
            if (mCarPowerManager != null) {
                mCarPowerManager.setListener(new CarPowerManager.CarPowerStateListener() {
                    @Override
                    public void onStateChanged(int i) {
                        MLog.d(TAG, "initCarPowerListener onStateChanged i=" + i);
                        if (CarPowerManager.CarPowerStateListener.ON == i && CarPowerManager.CarPowerStateListener.SUSPEND_ENTER == mSuspendEnter) {
                            mSuspendEnter = -1;
                            System.exit(0);
                        }
                        if (CarPowerManager.CarPowerStateListener.SUSPEND_ENTER == i) {
                            mSuspendEnter = i;
                        }
                        SPUtils.getInstance().put(SpKey.CAR_POWER_STATE, i);
                    }
                });
                
                
我们的车机是支持 ab分区的，也就是可以刷两个系统。
1. telnet cdc-qnx，qnx下执行指令 swdl_utils 可以改当前分区
2. 然后执行 switch.sh a或者switch.sh b就可以切分区
3. qnx下执行reset，重启


比如在当前系统下是b分区，usb升级就会升级a分区，自动重启，就会从a分区启动。这时想回退到之前的版本，可以执行上的操作，回到a分区的版本。

这样，如果切换版本，就不需要频繁刷机了。



所有使用SwitchCompat控件的界面，可见即可说的设置都需要复写textOn/textOff属性，否则SwitchCompat会默认注册“开启”/“关闭”。 此时用户唤醒后说“开启”“关闭”就会出现可见即可说响应混乱的问题。


- 屏蔽无障碍服务扫描（**频繁刷新控件例如进度条或者非必需响应可见即可说诉求的多层嵌套的控件**，建议从需求导入阶段就拒掉对应的可见即可说的需求，产品定义不需要响应可见即可说的View或者ViewGroup）

  **屏蔽单个控件：android:importantForAccessibility="no"**

  **屏蔽控件及其子控件：android:importantForAccessibility="noHideDescendants"**

- 滑动类型的控件（RecyclerView、ListView、ScrollView、ViewPager）已由助理侧实现了,应用侧不需要关注实现

E0Y PHEV车型，release分支已经拉出来了，0307分支，月底sop，有0y的bug，提到0128的，也需要同步到 0307分支，同时检查下7号开始提到master和0128的，有需要cp到0307的不要遗漏。



后视镜电动调节是标配，和配置字无关。这个弹框肯定有。
方向盘电动调节，03关联 方向盘电动调节配置字，0y关联转向管住柱调节配置字
方向盘电动调节弹框离得恢复和保存 的显示隐藏关联 方向盘记忆配置字；后视镜电动调节弹框离得恢复和保存 的显示隐藏关联 后视镜下翻配置字
RW-57279,RW-57290



老的软件版本，后视镜弹框里记忆恢复的按钮，关联的是 后视镜记忆这个配置字。
当时这么更改的缘由是因为此单：
内部：http://jira.i-tetris.com/browse/RW-32508
外部：http://52.80.87.177:8080/browse/RW-37671
本单中，后视镜里记忆恢复的按钮没有显示出来，是因为后视镜记忆配置字配置的值是0.
短期解决方案：
后视镜记忆配置字 改成 ，重启后即可显示。
长期解决方案：
OTA升级1.5版本。（3.12号 根据公司内部task RW-57279，将后视镜弹框里的记忆恢复按钮的关联配置字改成 后视镜倒车下翻 。 3.12 以后的版本中修复此问题）


app运行内存，主要是由3d车模和图片消耗。
以0y为例：
正常点击各个tab，车辆设置运行内存占839M，去掉车模和大图，运行内存占用260M。
其中大图占用150M。

大图占用运行内存的逻辑：
E0X全屏尺寸是2560 * 1440的像素，每个像素需要4字节去解析，解析这张图片需要
2560 * 1440 * 4 的字节，也就是14M。
如果车身颜色都可以修改的话，所有的图片都要重新加载一边，内存占用量的增加数，就是每张图片的像素 宽 * 高 * 4，粗略估计，每切换一次颜色，运行内存增加一两百M。

目前E0X车辆设置卡顿的主要原因就是，使用了太多的图片和车模。
如果把这些车模和图片去掉，体验非常流畅。
继续增加图片的使用，只会让车辆设置越来越卡。



gerrit上这样可以搜索 自己在某个工程里的提交记录
owner:self project:apps/gladius/android/chery/e0x/RedwoodCarSettings



adb shell am start com.android.settings
国际化开发时，用这个可以进入andrroid 原生的系统设置，可以更改语言


翻译表格连接：
如果已经有的string key的文言变动，此key只有自己用的话，就加到连接的对应的月份里；
如果此key已经多出使用，当前修改人需要创建新的key，以满足当前的文言变动需求。并把新key加入到对应的月份里。
https://docs.google.com/spreadsheets/d/1biPtc5cjjC7XozSrOKD7ZBRI6JFbeDdF/edit#gid=730388321

国际翻译文档管理规范：
新增功能或者原有中文文言变动，请使用新的string key。只要改中文string文件，其他string不要添加。同时把新增的string key加到翻译表格的对应的月份里；
相关开发定期同步表格到代码中。如果遇到测试提的需要文本换行的需求，转给黄成，黄成在文本里加上\n 后，我们再同步到代码里。

阿拉伯：values-ar-rIL
德语：values-de-rDE
西班牙语：values-es-rES
波斯：values-fa-rIR
法语：values-fr-rFR
意大利：values-it-rIT
希伯来文 (以色列)：values-iw-rIL
荷兰：values-nl-rNL
波兰：values-pl-rPL
葡萄牙：values-pt-rPT
俄文：values-ru-rRU
瑞典：values-sv-rSE
土耳其：values-tr-rTR
乌克兰：values-uk-rUA
挪威：values-nn-rNO


values-en-rGB
values-en-rUS


   const val LAN_CHINA = "zh"//中文
    const val LAN_UK = "en"//英式英语  values-en-rGB
    const val LAN_RUSSIA = "ru"//俄国   values-ru-rRU
    const val LAN_ARAB = "ar"//阿拉伯  values-ar-rIL
    const val LAN_PERSIAN = "fa"//波斯 values-fa-rIR
    const val LAN_PORTUGUESE = "pt"//葡萄牙  values-pt-rPT
    const val LAN_UKRAINIAN = "uk"//乌克兰  values-uk-rUA
    const val LAN_SPANISH = "es"//西班牙语   values-es-rES
    const val LAN_GERMAN = "de"//德语    values-de-rDE
    const val LAN_TURKISH = "tr"//土耳其语  values-tr-rTR
    const val LAN_FRENCH = "fr"//法语   values-fr-rFR
    const val LAN_ITALIAN = "it"//意语  values-it-rIT
    const val LAN_DUTCH = "nl"//荷兰语 values-nl-rNL
    const val LAN_POLISH = "pl"//波兰语  values-pl-rPL
    const val LAN_SWEDISH = "sv"//瑞典语  values-sv-rSE
    const val LAN_NORWAY = "nn"//挪威语 values-nn-rNO
    const val LAN_ISRAEL = "iw"//希伯来语（以色列） values-iw-rIL












